"use strict";
(self.webpackChunktradingview = self.webpackChunktradingview || []).push([
	[64679], {
		683766: (e, t, i) => {
			i.d(t, {
				materializeBackground: () => a,
				dematerializeBackground: () => l
			});
			var n = i(588537),
				s = i(676745),
				r = i(695078);

			function a(e, t) {
				if (e.start >= t.length || e.stop >= t.length) return null;
				const i = t[e.start],
					r = t[e.stop];
				return r === s.INVALID_TIME_POINT_INDEX ? null : ((0, n.assert)(i === s.INVALID_TIME_POINT_INDEX || i <= r, "start should not exceed stop"), {
					start: i === s.INVALID_TIME_POINT_INDEX ? null : i,
					stop: r
				})
			}

			function l(e, t, i) {
				return {
					id: t,
					start: (0, r.ensureTimePointIndexIndex)(i.indexOf(null !== e.start ? e.start : s.INVALID_TIME_POINT_INDEX)),
					stop: (0, r.ensureTimePointIndexIndex)(i.indexOf(e.stop))
				}
			}
		},
		671437: (e, t, i) => {
			i.d(t, {
				DwgBoxStyle: () => n,
				DwgBoxFontType: () => r,
				materializeDwgBox: () => d,
				dematerializeDwgBox: () => o
			});
			var n, s, r, a = i(676745),
				l = i(695078);

			function d(e, t) {
				var i, n;
				if (e.x1 >= t.length || e.x2 >= t.length || null === e.y1 || null === e.y2) return null;
				let s = t[e.x1],
					r = t[e.x2];
				return s === a.INVALID_TIME_POINT_INDEX && (s = null), r === a.INVALID_TIME_POINT_INDEX && (r = null), {
					left: s,
					right: r,
					top: e.y1,
					bottom: e.y2,
					borderColorIndex: e.c,
					backgroundColorIndex: e.bc,
					extend: e.ex,
					borderStyle: e.st,
					borderWidth: e.w,
					text: e.t,
					wordWrap: e.tw,
					horizontalTextAlignment: e.tha,
					verticalTextAlignment: e.tva,
					fontSize: e.ts,
					textColorIndex: null !== (i = e.tc) && void 0 !== i ? i : null,
					fontType: null !== (n = e.tf) && void 0 !== n ? n : null
				}
			}

			function o(e, t, i) {
				var n, s, r;
				return {
					id: t,
					x1: (0, l.ensureTimePointIndexIndex)(i.indexOf(null !== (n = e.left) && void 0 !== n ? n : a.INVALID_TIME_POINT_INDEX)),
					x2: (0, l.ensureTimePointIndexIndex)(i.indexOf(null !== (s = e.right) && void 0 !== s ? s : a.INVALID_TIME_POINT_INDEX)),
					y1: e.top,
					y2: e.bottom,
					c: e.borderColorIndex,
					bc: e.backgroundColorIndex,
					ex: e.extend,
					st: e.borderStyle,
					w: e.borderWidth,
					t: e.text,
					tw: e.wordWrap,
					tha: e.horizontalTextAlignment,
					tva: e.verticalTextAlignment,
					ts: e.fontSize,
					tf: null !== (r = e.fontType) && void 0 !== r ? r : void 0,
					tc: e.textColorIndex
				}
			}! function(e) {
				e.Solid = "sol", e.Dotted = "dot", e.Dashed = "dsh", e.LeftArrow = "al", e.RightArrow = "ar", e.BothArrow = "ab"
			}(n || (n = {})),
			function(e) {
				e.Top = "top", e.Center = "center", e.Bottom = "bottom"
			}(s || (s = {})),
			function(e) {
				e.Monospace = "monospace"
			}(r || (r = {}))
		},
		656164: (e, t, i) => {
			i.d(t, {
				DwgLabelTextAlign: () => n,
				DwgLabelYloc: () => s,
				DwgLabelStyle: () => r,
				materializeDwgLabel: () => o,
				dematerializeDwgLabel: () => h
			});
			var n, s, r, a, l = i(676745),
				d = i(695078);

			function o(e, t) {
				var i;
				if (e.x >= t.length) return null;
				const s = t[e.x];
				return s === l.INVALID_TIME_POINT_INDEX ? null : {
					x: s,
					y: e.y,
					yloc: e.yl,
					text: e.t,
					style: e.st,
					size: e.sz,
					colorIndex: e.ci,
					textColorIndex: e.tci,
					textAlign: e.ta || n.Center,
					tooltip: e.tt || "",
					fontType: null !== (i = e.tf) && void 0 !== i ? i : null
				}
			}

			function h(e, t, i) {
				var n;
				return {
					id: t,
					x: (0, d.ensureTimePointIndexIndex)(i.indexOf(e.x)),
					y: e.y,
					yl: e.yloc,
					t: e.text,
					st: e.style,
					sz: e.size,
					ci: e.colorIndex,
					tci: e.textColorIndex,
					ta: e.textAlign,
					tt: e.tooltip,
					tf: null !== (n = e.fontType) && void 0 !== n ? n : void 0
				}
			}! function(e) {
				e.Left = "left", e.Center = "center", e.Right = "right"
			}(n || (n = {})),
			function(e) {
				e.AboveBar = "ab", e.BelowBar = "bl", e.Price = "pr", e.Auto = "auto"
			}(s || (s = {})),
			function(e) {
				e.Xcross = "xcr", e.Cross = "cr", e.Triangleup = "tup",
					e.Triangledown = "tdn", e.Flag = "flg", e.Circle = "cir", e.Arrowup = "aup", e.Arrowdown = "adn", e.LabelUp = "lup", e.LabelDown = "ldn", e.LabelLeft = "llf", e.LabelRight = "lrg", e.LabelCenter = "lcn", e.LabelLeftUp = "luplf", e.LabelLeftDown = "llwlf", e.LabelRightUp = "luprg", e.LabelRightDown = "llwrg", e.Square = "sq", e.Diamond = "dia", e.TextOutline = "to", e.None = "n"
			}(r || (r = {})),
			function(e) {
				e.Monospace = "monospace"
			}(a || (a = {}))
		},
		609582: (e, t, i) => {
			function n(e) {
				return {
					id: e.id,
					line1: e.line1,
					line2: e.line2,
					colorIndex: e.ci
				}
			}

			function s(e, t) {
				return {
					id: t,
					line1: e.line1,
					line2: e.line2,
					ci: e.colorIndex
				}
			}
			i.d(t, {
				materializeDwgLineFill: () => n,
				dematerializeDwgLineFill: () => s
			})
		},
		469278: (e, t, i) => {
			i.d(t, {
				DwgLineStyle: () => n,
				materializeDwgLine: () => a,
				dematerializeDwgLine: () => l
			});
			var n, s = i(676745),
				r = i(695078);

			function a(e, t) {
				if (e.x1 >= t.length || e.x2 >= t.length || null === e.y1 || null === e.y2) return null;
				let i = t[e.x1],
					n = t[e.x2];
				return i === s.INVALID_TIME_POINT_INDEX && (i = null), n === s.INVALID_TIME_POINT_INDEX && (n = null), null !== i && null !== n || e.y1 === e.y2 ? {
					id: e.id,
					x1: i,
					y1: e.y1,
					x2: n,
					y2: e.y2,
					style: e.st,
					extend: e.ex,
					width: e.w,
					colorIndex: e.ci
				} : null
			}

			function l(e, t, i) {
				var n, a;
				const l = (0, r.ensureTimePointIndexIndex)(i.indexOf(null !== (n = e.x1) && void 0 !== n ? n : s.INVALID_TIME_POINT_INDEX)),
					d = (0, r.ensureTimePointIndexIndex)(i.indexOf(null !== (a = e.x2) && void 0 !== a ? a : s.INVALID_TIME_POINT_INDEX));
				return {
					id: t,
					x1: l,
					y1: e.y1,
					x2: d,
					y2: e.y2,
					st: e.style,
					ex: e.extend,
					w: e.width,
					ci: e.colorIndex
				}
			}! function(e) {
				e.Solid = "sol", e.Dotted = "dot", e.Dashed = "dsh", e.LeftArrow = "al", e.RightArrow = "ar", e.BothArrow = "ab"
			}(n || (n = {}))
		},
		179518: (e, t, i) => {
			var n, s;

			function r(e, t) {
				return {
					id: e.id,
					position: e.pos,
					rows: e.rows,
					columns: e.cols,
					backgroundColorIndex: e.bgc,
					frameColorIndex: e.frmc,
					frameWidth: e.frmw,
					borderColorIndex: e.brdc,
					borderWidth: e.brdw
				}
			}

			function a(e, t, i) {
				return {
					id: t,
					pos: e.position,
					rows: e.rows,
					cols: e.columns,
					bgc: e.backgroundColorIndex,
					frmc: e.frameColorIndex,
					frmw: e.frameWidth,
					brdc: e.borderColorIndex,
					brdw: e.borderWidth
				}
			}

			function l(e, t) {
				var i, n, s;
				return {
					tableId: e.tid,
					row: e.row,
					column: e.col,
					widthInPercentsOfPaneWidth: e.w,
					heightInPercentOfPaneHeight: e.h,
					text: e.t,
					textColorIndex: e.tc,
					horizontalTextAlignment: e.tha,
					verticalTextAlignment: e.tva,
					fontSize: e.ts,
					backgroundColorIndex: e.bgc,
					colSpan: null !== (i = e.colspan) && void 0 !== i ? i : 1,
					rowSpan: null !== (n = e.rowspan) && void 0 !== n ? n : 1,
					tooltip: e.tt,
					fontType: null !== (s = e.tf) && void 0 !== s ? s : null
				}
			}

			function d(e, t, i) {
				var n;
				return {
					id: t,
					tid: e.tableId,
					row: e.row,
					col: e.column,
					w: e.widthInPercentsOfPaneWidth,
					h: e.heightInPercentOfPaneHeight,
					t: e.text,
					tc: e.textColorIndex,
					tha: e.horizontalTextAlignment,
					tva: e.verticalTextAlignment,
					ts: e.fontSize,
					bgc: e.backgroundColorIndex,
					colspan: e.colSpan,
					rowspan: e.rowSpan,
					tt: e.tooltip,
					tf: null !== (n = e.fontType) && void 0 !== n ? n : void 0
				}
			}
			i.d(t, {
					DwgTableCellFontType: () => s,
					materializeDwgTable: () => r,
					dematerializeDwgTable: () => a,
					materializeDwgTableCell: () => l,
					dematerializeDwgTableCell: () => d
				}),
				function(e) {
					e.Top = "top", e.Center = "center", e.Bottom = "bottom"
				}(n || (n = {})),
				function(e) {
					e.Monospace = "monospace"
				}(s || (s = {}))
		},
		59192: (e, t, i) => {
			i.d(t, {
				HHistDirection: () => n,
				HHistLocation: () => s,
				HHistVolumeMode: () => r,
				materializeHHist: () => o,
				dematerializeHHist: () => h
			});
			var n, s, r, a = i(588537),
				l = i(676745),
				d = i(695078);

			function o(e, t) {
				if (e.firstBarTime >= t.length || e.lastBarTime >= t.length) return null;
				const i = t[e.firstBarTime],
					n = t[e.lastBarTime];
				return i === l.INVALID_TIME_POINT_INDEX || n === l.INVALID_TIME_POINT_INDEX ? null : ((0, a.assert)(i <= n, "firstBarTime should not exceed lastBarTime"), (0, a.assert)(e.priceLow <= e.priceHigh, "priceLow should not exceed priceHigh"), {
					firstBarTime: i,
					lastBarTime: n,
					rate: e.rate,
					priceHigh: e.priceHigh,
					priceLow: e.priceLow
				})
			}

			function h(e, t, i) {
				const n = (0, d.ensureTimePointIndexIndex)(i.indexOf(e.firstBarTime)),
					s = (0, d.ensureTimePointIndexIndex)(i.indexOf(e.lastBarTime));
				return {
					id: t,
					...e,
					firstBarTime: n,
					lastBarTime: s
				}
			}! function(e) {
				e.LeftToRight = "left_to_right", e.RightToLeft = "right_to_left"
			}(n || (n = {})),
			function(e) {
				e.Relative = "relative", e.Absolute = "absolute"
			}(s || (s = {})),
			function(e) {
				e.UpDown = "Up/Down", e.Total = "Total", e.Delta = "Delta"
			}(r || (r = {}))
		},
		787196: (e, t, i) => {
			i.d(t, {
				materializeHorizLine: () => a,
				dematerializeHorizLine: () => l
			});
			var n = i(588537),
				s = i(676745),
				r = i(695078);

			function a(e, t) {
				if (e.startIndex >= t.length || e.endIndex >= t.length) return null;
				const i = t[e.startIndex],
					r = t[e.endIndex];
				return i === s.INVALID_TIME_POINT_INDEX || r === s.INVALID_TIME_POINT_INDEX ? null : ((0, n.assert)(i <= r, "startIndex should not exceed endIndex"), {
					startIndex: i,
					endIndex: r,
					level: e.level,
					extendLeft: e.extendLeft,
					extendRight: e.extendRight
				})
			}

			function l(e, t, i) {
				const n = (0, r.ensureTimePointIndexIndex)(i.indexOf(e.startIndex)),
					s = (0, r.ensureTimePointIndexIndex)(i.indexOf(e.endIndex));
				return {
					id: t,
					...e,
					startIndex: n,
					endIndex: s
				}
			}
		},
		532229: (e, t, i) => {
			var n;

			function s(e) {
				return {
					level: e.level,
					text: e.text
				}
			}

			function r(e, t, i) {
				return {
					id: t,
					...e
				}
			}
			i.d(t, {
					TextPos: () => n,
					materializeLevel: () => s,
					dematerializeLevel: () => r
				}),
				function(e) {
					e[e.TopLeft = 0] = "TopLeft", e[e.TopCenter = 1] = "TopCenter", e[e.TopRight = 2] = "TopRight", e[e.MiddleLeft = 3] = "MiddleLeft", e[e.MiddleCenter = 4] = "MiddleCenter", e[e.MiddleRight = 5] = "MiddleRight", e[e.BottomLeft = 6] = "BottomLeft", e[e.BottomCenter = 7] = "BottomCenter", e[e.BottomRight = 8] = "BottomRight"
				}(n || (n = {}))
		},
		967528: (e, t, i) => {
			i.d(t, {
				materializeLine: () => a,
				dematerializeLine: () => l
			});
			var n = i(588537),
				s = i(676745),
				r = i(695078);

			function a(e, t) {
				if (e.startIndex >= t.length || e.endIndex >= t.length) return null;
				const i = t[e.startIndex],
					r = t[e.endIndex];
				return i === s.INVALID_TIME_POINT_INDEX || r === s.INVALID_TIME_POINT_INDEX ? null : ((0, n.assert)(i <= r, "startIndex should not exceed endIndex"), {
					startIndex: i,
					endIndex: r,
					startOffset: e.startOffset,
					endOffset: e.endOffset,
					startPrice: e.startPrice,
					endPrice: e.endPrice
				})
			}

			function l(e, t, i) {
				const n = (0, r.ensureTimePointIndexIndex)(i.indexOf(e.startIndex)),
					s = (0, r.ensureTimePointIndexIndex)(i.indexOf(e.endIndex));
				return {
					id: t,
					...e,
					startIndex: n,
					endIndex: s
				}
			}
		},
		211014: (e, t, i) => {
			i.d(t, {
				LiveStudyGraphics: () => b
			});
			var n = i(588537),
				s = i(59192),
				r = i(787196),
				a = i(684945),
				l = i(525156),
				d = i(683766),
				o = i(656164),
				h = i(469278),
				c = i(671437),
				_ = i(532229),
				x = i(967528),
				u = i(900173),
				g = i(174487),
				w = i(475604),
				I = i(179518),
				m = i(609582),
				f = i(965716),
				p = i(476043);
			class b {
				constructor() {
					this._indexes = [], this._horizlines = new Map,
						this._vertlines = new Map, this._lines = new Map, this._hlines = new Map, this._textmarks = new Map, this._shapemarks = new Map, this._backgrounds = new Map, this._polygons = new Map, this._trendchannels = new Map, this._hhists = new Map, this._dwglabels = new Map, this._dwgboxes = new Map, this._dwglines = new Map, this._dwgtables = new Map, this._dwgtablecells = new Map, this._dwglinefills = new Map, this._hhistsByTimePointIndex = new Map
				}
				horizlines() {
					return this._horizlines
				}
				vertlines() {
					return this._vertlines
				}
				lines() {
					return this._lines
				}
				hlines() {
					return this._hlines
				}
				textmarks() {
					return this._textmarks
				}
				shapemarks() {
					return this._shapemarks
				}
				backgrounds() {
					return this._backgrounds
				}
				polygons() {
					return this._polygons
				}
				trendchannels() {
					return this._trendchannels
				}
				hhists() {
					return this._hhists
				}
				dwglabels() {
					return this._dwglabels
				}
				dwglines() {
					return this._dwglines
				}
				dwgboxes() {
					return this._dwgboxes
				}
				dwgtables() {
					return this._dwgtables
				}
				dwgtablecells() {
					return this._dwgtablecells
				}
				dwglinefills() {
					return this._dwglinefills
				}
				hhistsByTimePointIndex() {
					return this._hhistsByTimePointIndex
				}
				clear() {
					this._indexes = [], this._clearPrimitives()
				}
				extract() {
					const e = e => e.extract(),
						t = {
							indexes: this._indexes,
							horizlines: z(this._horizlines, e),
							vertlines: z(this._vertlines, e),
							lines: z(this._lines, e),
							hlines: z(this._hlines, e),
							textmarks: z(this._textmarks, e),
							shapemarks: z(this._shapemarks, e),
							backgrounds: z(this._backgrounds, e),
							polygons: z(this._polygons, e),
							trendchannels: z(this._trendchannels, e),
							hhists: z(this._hhists, e),
							dwglabels: z(this._dwglabels, e),
							dwglines: z(this._dwglines, e),
							dwgboxes: z(this._dwgboxes, e),
							dwgtables: z(this._dwgtables, e),
							dwgtablecells: z(this._dwgtablecells, e),
							dwglinefills: z(this._dwglinefills, e)
						};
					return this._hhistsByTimePointIndex = new Map, new p.StaticStudyGraphics("data", t)
				}
				replaceIndexesTo(e) {
					this._indexes = e;
					const t = e => e.replaceIndexesTo(this._indexes);
					this._horizlines.forEach(t), this._vertlines.forEach(t), this._lines.forEach(t), this._hlines.forEach(t), this._textmarks.forEach(t), this._shapemarks.forEach(t), this._backgrounds.forEach(t), this._polygons.forEach(t), this._trendchannels.forEach(t), this._hhists.forEach(t), this._dwglabels.forEach(t), this._dwgboxes.forEach(t), this._dwglines.forEach(t), this._dwgtables.forEach(t), this._dwgtablecells.forEach(t), this._dwglinefills.forEach(t), this._hhistsByTimePointIndex = (0, f.splitHHistsByTimePointIndex)(this._hhists)
				}
				processCommands(e, t) {
					void 0 !== e.erase && this._processEraseCommands(e.erase), void 0 !== e.create && this._processCreateCommands(e.create, t)
				}
				_processCreateCommands(e, t) {
					for (const i in e) {
						if (!e.hasOwnProperty(i)) continue;
						const f = i;
						switch ((0, n.assert)(f in t, `There is a '${f}' in study response, but it doesn't present in graphics info!`), f) {
							case "horizlines":
								y(this._horizlines, e[f], t[f], this._indexes, r.materializeHorizLine);
								break;
							case "vertlines":
								y(this._vertlines, e[f], t[f], this._indexes, a.materializeVertLine);
								break;
							case "lines":
								y(this._lines, e[f], t[f], this._indexes, x.materializeLine);
								break;
							case "hlines":
								y(this._hlines, e[f], t[f], this._indexes, _.materializeLevel);
								break;
							case "textmarks":
								y(this._textmarks, e[f], t[f], this._indexes, g.materializeTextMark);
								break;
							case "shapemarks":
								y(this._shapemarks, e[f], t[f], this._indexes, u.materializeShapeMark);
								break;
							case "backgrounds":
								y(this._backgrounds, e[f], t[f], this._indexes, d.materializeBackground);
								break;
							case "polygons":
								y(this._polygons, e[f], t[f], this._indexes, l.materializePolygon);
								break;
							case "trendchannels":
								y(this._trendchannels, e[f], t[f], this._indexes, w.materializeTrendChannel);
								break;
							case "hhists":
								y(this._hhists, e[f], t[f], this._indexes, s.materializeHHist);
								break;
							case "dwglabels":
								y(this._dwglabels, e[f], t[f], this._indexes, o.materializeDwgLabel);
								break;
							case "dwglines":
								y(this._dwglines, e[f], t[f], this._indexes, h.materializeDwgLine);
								break;
							case "dwgboxes":
								y(this._dwgboxes, e[f], t[f], this._indexes, c.materializeDwgBox);
								break;
							case "dwgtables":
								y(this._dwgtables, e[f], t[f], this._indexes, I.materializeDwgTable);
								break;
							case "dwgtablecells":
								y(this._dwgtablecells, e[f], t[f], this._indexes, I.materializeDwgTableCell);
								break;
							case "dwglinefills":
								y(this._dwglinefills, e[f], t[f], this._indexes, m.materializeDwgLineFill)
						}
					}
					this._hhistsByTimePointIndex = (0, f.splitHHistsByTimePointIndex)(this._hhists)
				}
				_processEraseCommands(e) {
					for (const t of e)
						if ("all" === t.action) this._clearPrimitives();
						else {
							const e = e => e.deleteById(t.id);
							switch (t.type) {
								case "horizlines":
									this._horizlines.forEach(e);
									break;
								case "vertlines":
									this._vertlines.forEach(e);
									break;
								case "lines":
									this._lines.forEach(e);
									break;
								case "hlines":
									this._hlines.forEach(e);
									break;
								case "textmarks":
									this._textmarks.forEach(e);
									break;
								case "shapemarks":
									this._shapemarks.forEach(e);
									break;
								case "backgrounds":
									this._backgrounds.forEach(e);
									break;
								case "polygons":
									this._polygons.forEach(e);
									break;
								case "trendchannels":
									this._trendchannels.forEach(e);
									break;
								case "hhists":
									this._hhists.forEach(e);
									break;
								case "dwglabels":
									this._dwglabels.forEach(e);
									break;
								case "dwglines":
									this._dwglines.forEach(e);
									break;
								case "dwgboxes":
									this._dwgboxes.forEach(e);
									break;
								case "dwgtables":
									this._dwgtables.forEach(e);
									break;
								case "dwgtablecells":
									this._dwgtablecells.forEach(e);
									break;
								case "dwglinefills":
									this._dwglinefills.forEach(e)
							}
						} this._hhistsByTimePointIndex = (0, f.splitHHistsByTimePointIndex)(this._hhists)
				}
				_clearPrimitives() {
					this._horizlines.clear(), this._vertlines.clear(), this._lines.clear(), this._hlines.clear(), this._textmarks.clear(), this._shapemarks.clear(), this._backgrounds.clear(), this._polygons.clear(), this._trendchannels.clear(), this._hhists.clear(), this._dwglabels.clear(), this._dwgboxes.clear(), this._dwglines.clear(), this._dwgtables.clear(), this._dwgtablecells.clear(), this._dwglinefills.clear(), this._hhistsByTimePointIndex = new Map
				}
			}
			class T {
				constructor(e, t) {
					this._primitivesDataById = new Map, this._primitiveById = new Map, this._materializePrimitive = e, this._indexes = t
				}
				forEach(e, t) {
					this._primitiveById.forEach((i => {
						e.call(t, i, i, this)
					}))
				}
				has(e) {
					let t = !1;
					return this._primitiveById.forEach((i => {
						t = t || i === e
					})), t
				}
				get size() {
					return this._primitiveById.size
				} [Symbol.iterator]() {
					return this._primitiveById.values()
				}
				entries() {
					throw new Error("Not implemented")
				}
				keys() {
					throw new Error("Not implemented")
				}
				values() {
					throw new Error("Not implemented")
				}
				hasId(e) {
					return this._primitiveById.has(e)
				}
				addData(e) {
					this._primitivesDataById.set(e.id, e),
						this._tryMaterialize(e)
				}
				deleteById(e) {
					this._primitiveById.delete(e), this._primitivesDataById.delete(e)
				}
				clear() {
					this._primitivesDataById.clear(), this._primitiveById.clear()
				}
				replaceIndexesTo(e) {
					this._indexes = e, this._primitiveById.clear(), this._primitivesDataById.forEach(this._tryMaterialize, this)
				}
				extract() {
					const e = new Set(this._primitivesDataById.values());
					return this._primitivesDataById = new Map, this._primitiveById.clear(), e
				}
				_tryMaterialize(e) {
					const t = this._materializePrimitive(e, this._indexes);
					null !== t && ((0, n.assert)(!this._primitiveById.has(e.id), "primitive with specified id should not exist"), this._primitiveById.set(e.id, t))
				}
			}

			function z(e, t) {
				const i = new Map;
				return e.forEach(((e, n) => i.set(n, t(e)))), i
			}

			function y(e, t, i, s, r) {
				if (void 0 !== t)
					for (const a of t) {
						const t = a.styleId;
						void 0 !== i && (0, n.assert)(t in i, "Every style used by graphics primitive should be declared in study metainfo");
						let l = e.get(t);
						void 0 === l && (l = new T(r, s), e.set(t, l)), a.data.forEach(l.addData.bind(l))
					}
			}
		},
		525156: (e, t, i) => {
			i.d(t, {
				materializePolygon: () => r,
				dematerializePolygon: () => a
			});
			var n = i(676745),
				s = i(695078);

			function r(e, t) {
				for (const i of e.points) {
					if (i.index >= t.length) return null;
					if (t[i.index] === n.INVALID_TIME_POINT_INDEX) return null
				}
				return {
					points: e.points.map((e => ({
						index: t[e.index],
						offset: e.offset,
						level: e.level
					})))
				}
			}

			function a(e, t, i) {
				return {
					id: t,
					points: e.points.map((e => ({
						...e,
						index: (0, s.ensureTimePointIndexIndex)(i.indexOf(e.index))
					})))
				}
			}
		},
		900173: (e, t, i) => {
			i.d(t, {
				materializeShapeMark: () => a,
				dematerializeShapeMark: () => l
			});
			var n, s = i(676745),
				r = i(695078);

			function a(e, t) {
				if (e.time >= t.length) return null;
				const i = t[e.time];
				return i === s.INVALID_TIME_POINT_INDEX ? null : {
					time: i,
					price: e.price
				}
			}

			function l(e, t, i) {
				const n = (0, r.ensureTimePointIndexIndex)(i.indexOf(e.time));
				return {
					id: t,
					...e,
					time: n
				}
			}! function(e) {
				e.Circle = "circle", e.ArrowUp = "arrowUp", e.ArrowDown = "arrowDown", e.ArrowRight = "arrowRight", e.ArrowLeft = "arrowLeft", e.Square = "square"
			}(n || (n = {}))
		},
		476043: (e, t, i) => {
			i.d(t, {
				StaticStudyGraphics: () => p,
				emptyStudyGraphics: () => y,
				loadStudyGraphics: () => E,
				saveStudyGraphics: () => v
			});
			var n = i(676745),
				s = i(787196),
				r = i(684945),
				a = i(59192),
				l = i(525156),
				d = i(683766),
				o = i(532229),
				h = i(967528),
				c = i(900173),
				_ = i(174487),
				x = i(475604),
				u = i(656164),
				g = i(469278),
				w = i(671437),
				I = i(179518),
				m = i(609582),
				f = i(965716);
			class p {
				constructor(e, t) {
					if (this._indexes = [], this._horizlines = new Map, this._vertlines = new Map, this._lines = new Map, this._hlines = new Map, this._textmarks = new Map, this._shapemarks = new Map, this._backgrounds = new Map, this._polygons = new Map, this._trendchannels = new Map, this._hhists = new Map, this._dwglabels = new Map, this._dwglines = new Map, this._dwgboxes = new Map, this._dwgtables = new Map, this._dwgtablecells = new Map, this._dwglinefills = new Map, "data" === e) {
						const e = t;
						this._indexes = e.indexes, this._vertlines = b(e.vertlines, this._indexes, r.materializeVertLine), this._horizlines = b(e.horizlines, this._indexes, s.materializeHorizLine), this._polygons = b(e.polygons, this._indexes, l.materializePolygon), this._hhists = b(e.hhists, this._indexes, a.materializeHHist), this._lines = b(e.lines, this._indexes, h.materializeLine),
							this._hlines = b(e.hlines, this._indexes, o.materializeLevel), this._textmarks = b(e.textmarks, this._indexes, _.materializeTextMark), this._shapemarks = b(e.shapemarks, this._indexes, c.materializeShapeMark), this._backgrounds = b(e.backgrounds, this._indexes, d.materializeBackground), this._trendchannels = b(e.trendchannels, this._indexes, x.materializeTrendChannel), this._dwglabels = b(e.dwglabels, this._indexes, u.materializeDwgLabel), this._dwglines = b(e.dwglines, this._indexes, g.materializeDwgLine), this._dwgboxes = b(e.dwgboxes, this._indexes, w.materializeDwgBox), this._dwgtables = b(e.dwgtables, this._indexes, I.materializeDwgTable), this._dwgtablecells = b(e.dwgtablecells, this._indexes, I.materializeDwgTableCell), this._dwglinefills = b(e.dwglinefills, this._indexes, m.materializeDwgLineFill)
					} else if ("state" === e) {
						const e = t;
						this._indexes = e.indexes || [], this._vertlines = T(e.vertlines, this._indexes, r.materializeVertLine), this._horizlines = T(e.horizlines, this._indexes, s.materializeHorizLine), this._polygons = T(e.polygons, this._indexes, l.materializePolygon), this._hhists = T(e.hhists, this._indexes, a.materializeHHist), this._lines = T(e.lines, this._indexes, h.materializeLine), this._hlines = T(e.hlines, this._indexes, o.materializeLevel), this._textmarks = T(e.textmarks, this._indexes, _.materializeTextMark), this._shapemarks = T(e.shapemarks, this._indexes, c.materializeShapeMark), this._backgrounds = T(e.backgrounds, this._indexes, d.materializeBackground), this._trendchannels = T(e.trendchannels, this._indexes, x.materializeTrendChannel), this._dwglabels = T(e.dwglabels, this._indexes, u.materializeDwgLabel), this._dwglines = T(e.dwglines, this._indexes, g.materializeDwgLine), this._dwgboxes = T(e.dwgboxes, this._indexes, w.materializeDwgBox), this._dwgtables = T(e.dwgtables, this._indexes, I.materializeDwgTable), this._dwgtablecells = T(e.dwgtablecells, this._indexes, I.materializeDwgTableCell), this._dwglinefills = T(e.dwglinefills, this._indexes, m.materializeDwgLineFill)
					}
					this._hhistsByTimePointIndex = (0, f.splitHHistsByTimePointIndex)(this._hhists)
				}
				horizlines() {
					return this._horizlines
				}
				vertlines() {
					return this._vertlines
				}
				lines() {
					return this._lines
				}
				hlines() {
					return this._hlines
				}
				textmarks() {
					return this._textmarks
				}
				shapemarks() {
					return this._shapemarks
				}
				backgrounds() {
					return this._backgrounds
				}
				polygons() {
					return this._polygons
				}
				trendchannels() {
					return this._trendchannels
				}
				hhists() {
					return this._hhists
				}
				dwglabels() {
					return this._dwglabels
				}
				dwglines() {
					return this._dwglines
				}
				dwgboxes() {
					return this._dwgboxes
				}
				dwgtables() {
					return this._dwgtables
				}
				dwgtablecells() {
					return this._dwgtablecells
				}
				dwglinefills() {
					return this._dwglinefills
				}
				hhistsByTimePointIndex() {
					return this._hhistsByTimePointIndex
				}
			}

			function b(e, t, i) {
				const n = new Map;
				return e.forEach(((e, s) => {
					const r = n.get(s) || new Set;
					e.forEach((e => {
						const n = i(e, t);
						null !== n && r.add(n)
					})), n.set(s, r)
				})), n
			}

			function T(e, t, i) {
				const n = new Map;
				if (void 0 === e) return n;
				for (const s of e) {
					const e = s.styleId,
						r = n.get(e) || new Set;
					s.data.forEach((e => {
						const n = i(e, t);
						null !== n && r.add(n)
					})), n.set(e, r)
				}
				return n
			}

			function z(e, t, i, n) {
				const s = [];
				return e.forEach(((e, r) => {
					e.forEach((e => {
						! function(e, t, i) {
							let n = null;
							for (const i of e) i.styleId === t && (n = i);
							null === n && (n = {
								styleId: t,
								data: []
							}, e.push(n)), n.data.push(i)
						}(s, r, n(e, t(e), i))
					}))
				})), s.length > 0 ? s : void 0
			}

			function y() {
				return new p
			}

			function E(e) {
				return new p("state", e)
			}

			function v(e) {
				const t = function(e) {
						const t = new Set;
						e.horizlines().forEach(((e, i) => {
							e.forEach((e => {
								t.add(e.startIndex), t.add(e.endIndex)
							}))
						})), e.vertlines().forEach(((e, i) => {
							e.forEach((e => {
								t.add(e.index)
							}))
						})), e.lines().forEach(((e, i) => {
							e.forEach((e => {
								t.add(e.startIndex), t.add(e.endIndex)
							}))
						})), e.textmarks().forEach(((e, i) => {
							e.forEach((e => {
								t.add(e.time)
							}))
						})), e.shapemarks().forEach(((e, i) => {
							e.forEach((e => {
								t.add(e.time)
							}))
						})), e.backgrounds().forEach(((e, i) => {
							e.forEach((e => {
								t.add(null !== e.start ? e.start : n.INVALID_TIME_POINT_INDEX), t.add(e.stop)
							}))
						})), e.polygons().forEach(((e, i) => {
							e.forEach((e => {
								e.points.forEach((e => {
									t.add(e.index)
								}))
							}))
						})), e.trendchannels().forEach(((e, i) => {
							e.forEach((e => {
								t.add(e.startIndex), t.add(e.endIndex)
							}))
						})), e.hhists().forEach(((e, i) => {
							e.forEach((e => {
								t.add(e.firstBarTime), t.add(e.lastBarTime)
							}))
						})), e.dwglabels().forEach(((e, i) => {
							e.forEach((e => {
								t.add(e.x)
							}))
						})), e.dwglines().forEach(((e, i) => {
							e.forEach((e => {
								var i, s;
								t.add(null !== (i = e.x1) && void 0 !== i ? i : n.INVALID_TIME_POINT_INDEX), t.add(null !== (s = e.x2) && void 0 !== s ? s : n.INVALID_TIME_POINT_INDEX)
							}))
						})), e.dwgboxes().forEach(((e, i) => {
							e.forEach((e => {
								var i, s;
								t.add(null !== (i = e.left) && void 0 !== i ? i : n.INVALID_TIME_POINT_INDEX), t.add(null !== (s = e.right) && void 0 !== s ? s : n.INVALID_TIME_POINT_INDEX)
							}))
						}));
						const i = Array.from(t);
						return i.sort(((e, t) => e - t)), i
					}(e),
					i = {
						indexes: t
					};
				let f = 0;
				const p = () => ++f,
					b = e => e.id,
					T = e => e.id;
				return i.vertlines = z(e.vertlines(), p, t, r.dematerializeVertLine), i.horizlines = z(e.horizlines(), p, t, s.dematerializeHorizLine), i.polygons = z(e.polygons(), p, t, l.dematerializePolygon), i.hhists = z(e.hhists(), p, t, a.dematerializeHHist), i.lines = z(e.lines(), p, t, h.dematerializeLine), i.hlines = z(e.hlines(), p, t, o.dematerializeLevel), i.textmarks = z(e.textmarks(), p, t, _.dematerializeTextMark), i.shapemarks = z(e.shapemarks(), p, t, c.dematerializeShapeMark), i.backgrounds = z(e.backgrounds(), p, t, d.dematerializeBackground), i.trendchannels = z(e.trendchannels(), p, t, x.dematerializeTrendChannel), i.dwglabels = z(e.dwglabels(), p, t, u.dematerializeDwgLabel), i.dwglines = z(e.dwglines(), T, t, g.dematerializeDwgLine), i.dwgboxes = z(e.dwgboxes(), p, t, w.dematerializeDwgBox), i.dwgtables = z(e.dwgtables(), b, t, I.dematerializeDwgTable), i.dwgtablecells = z(e.dwgtablecells(), p, t, I.dematerializeDwgTableCell), i.dwglinefills = z(e.dwglinefills(), p, t, m.dematerializeDwgLineFill), i
			}
		},
		965716: (e, t, i) => {
			i.d(t, {
				primitivesZOrders: () => s,
				isStudyGraphicsEmpty: () => r,
				splitHHistsByTimePointIndex: () => a
			});
			const n = ["horizlines", "vertlines", "lines", "hlines", "textmarks", "shapemarks", "backgrounds", "polygons", "trendchannels", "hhists", "dwglabels", "dwglines", "dwgboxes", "dwgtables", "dwgtablecells", "dwglinefills"],
				s = new Map([
					["polygons", -4],
					["trendchannels", -3],
					["textmarks", -2],
					["shapemarks", -2],
					["backgrounds", -1],
					["hlines", 1],
					["horizlines", 1],
					["hhists", 1],
					["dwglinefills", 2],
					["vertlines", 3],
					["lines", 3],
					["dwglines", 3],
					["dwgboxes", 4],
					["dwglabels", 5],
					["dwgtables", 6],
					["dwgtablecells", 6]
				]);

			function r(e) {
				return !n.some((t => e[t]().size > 0))
			}

			function a(e) {
				const t = new Map;
				return e.forEach(((e, i) => {
					e.forEach((e => {
						const n = {
								...e,
								styleId: i
							},
							s = e.firstBarTime;
						let r = t.get(s);
						void 0 === r && (r = new Set, t.set(s, r)), r.add(n)
					}))
				})), t
			}
		},
		174487: (e, t, i) => {
			i.d(t, {
				TextMarkType: () => n,
				materializeTextMark: () => l,
				dematerializeTextMark: () => d
			});
			var n, s, r = i(676745),
				a = i(695078);

			function l(e, t) {
				if (e.time >= t.length) return null;
				const i = t[e.time];
				return i === r.INVALID_TIME_POINT_INDEX ? null : {
					time: i,
					offset: e.offset,
					text: e.text,
					price: e.price
				}
			}

			function d(e, t, i) {
				const n = (0, a.ensureTimePointIndexIndex)(i.indexOf(e.time));
				return {
					id: t,
					...e,
					time: n
				}
			}! function(e) {
				e.Triangle = "triangle", e.Rectangle = "rectangle"
			}(n || (n = {})),
			function(e) {
				e.Verdana = "Verdana", e.CourierNew = "Courier New", e.TimesNewRoman = "Times New Roman", e.Arial = "Arial"
			}(s || (s = {}))
		},
		475604: (e, t, i) => {
			i.d(t, {
				materializeTrendChannel: () => a,
				dematerializeTrendChannel: () => l
			});
			var n = i(588537),
				s = i(676745),
				r = i(695078);

			function a(e, t) {
				if (e.startIndex >= t.length || e.endIndex >= t.length) return null;
				const i = t[e.startIndex],
					r = t[e.endIndex];
				return i === s.INVALID_TIME_POINT_INDEX || r === s.INVALID_TIME_POINT_INDEX ? null : ((0, n.assert)(i <= r, "startIndex should not exceed endIndex"), {
					startIndex: i,
					endIndex: r,
					extendLeft: e.extendLeft,
					extendRight: e.extendRight,
					startHighPrice: e.startHighPrice,
					startLowPrice: e.startLowPrice,
					endHighPrice: e.endHighPrice,
					transparency: e.transparency
				})
			}

			function l(e, t, i) {
				const n = (0, r.ensureTimePointIndexIndex)(i.indexOf(e.startIndex)),
					s = (0, r.ensureTimePointIndexIndex)(i.indexOf(e.endIndex));
				return {
					id: t,
					...e,
					startIndex: n,
					endIndex: s
				}
			}
		},
		684945: (e, t, i) => {
			i.d(t, {
				materializeVertLine: () => r,
				dematerializeVertLine: () => a
			});
			var n = i(676745),
				s = i(695078);

			function r(e, t) {
				if (e.index >= t.length) return null;
				const i = t[e.index];
				return i === n.INVALID_TIME_POINT_INDEX ? null : {
					startPrice: e.startPrice,
					endPrice: e.endPrice,
					index: i,
					extendTop: e.extendTop,
					extendBottom: e.extendBottom
				}
			}

			function a(e, t, i) {
				const n = (0, s.ensureTimePointIndexIndex)(i.indexOf(e.index));
				return {
					id: t,
					...e,
					index: n
				}
			}
		},
		523083: (e, t, i) => {
			function n(e) {
				const t = new Map;
				return e.plots.forEach(((e, i) => {
					t.set(e.id, (e => e[i + 1]))
				})), t
			}

			function s(e, t) {
				return null == e[t]
			}
			i.d(t, {
				studyPlotFunctionMap: () => n,
				studyEmptyPlotValuePredicate: () => s
			})
		}
	}
]);