(self.webpackChunktradingview = self.webpackChunktradingview || []).push([
	[78034], {
		706617: (e, t) => {
			"use strict";
			t.hasProperty = t.isObject = void 0, t.isObject = function(e) {
				var t = typeof e;
				return null !== e && ("object" === t || "function" === t)
			}, t.hasProperty = function(e, t) {
				return t in e
			}
		},
		316230: (e, t, i) => {
			"use strict";
			i.d(t, {
				default: () => r
			});
			var n = i(517487);
			const r = function(e, t) {
				return (0, n.default)(e, t)
			}
		},
		420194: e => {
			e.exports = {
				container: "container-ArDpmAvc",
				inner: "inner-ArDpmAvc",
				"border-left": "border-left-ArDpmAvc",
				"border-right": "border-right-ArDpmAvc",
				"border-top": "border-top-ArDpmAvc",
				"border-bottom": "border-bottom-ArDpmAvc",
				"top-right-radius": "top-right-radius-ArDpmAvc",
				"top-left-radius": "top-left-radius-ArDpmAvc",
				"bottom-right-radius": "bottom-right-radius-ArDpmAvc",
				"bottom-left-radius": "bottom-left-radius-ArDpmAvc"
			}
		},
		335462: e => {
			e.exports = {
				"css-value-header-toolbar-height": "38px"
			}
		},
		608249: e => {
			e.exports = {
				"top-left-button-height": "38px",
				"top-left-button-width": "52px"
			}
		},
		763218: e => {
			e.exports = {
				"top-left-button-height": "38px",
				"top-left-button-width": "52px",
				topLeftButton: "topLeftButton-_EJh9u3N",
				stub: "stub-_EJh9u3N"
			}
		},
		164387: (e, t, i) => {
			"use strict";
			i.d(t, {
				setupChartEventHint: () => u
			});
			var n = i(588537),
				r = i(575932),
				o = i(62802),
				s = i(308170),
				a = i(29084),
				l = i(638456),
				c = i(470316),
				d = i(611688);

			function u(e, t = !1) {
				if (!d.enabled("popup_hints")) return;
				const u = e.getContainer();
				let h = null,
					_ = null;

				function g(e, t) {
					if (h) h.show(e, m.bind(null, t));
					else {
						const n = s.tool.value();
						Promise.all([i.e(8834), i.e(91579), i.e(75514), i.e(26166)]).then(i.bind(i, 410837)).then((i => {
							h = new i.ChartEventHintRenderer(u), n === s.tool.value() && h.show(e, m.bind(null, t))
						}))
					}
				}

				function p(e) {
					return !Boolean(o.getBool(e))
				}

				function m(e) {
					o.setValue(e, !0, {
						forceFlush: !0
					}), (0, n.ensureNotNull)(h).destroy(), null !== _ && _(), h = null
				}
				s.tool.subscribe((function() {
					if (!p("hint.touchPainting")) return;
					const e = s.tool.value(),
						t = (0, a.isLineToolDrawWithoutPoints)(e),
						i = l.CheckMobile.any();
					!(0, a.isStudyLineToolName)(e) || "LineToolRegressionTrend" === e || t || i ? (0, a.isLineToolName)(e) && !(0, a.isLineDrawnWithPressedButton)(e) && !t && i ? g((0, r.t)("Move the point to position the anchor then tap to place"), "hint.touchPainting") : h && h.hide() : g((0, r.t)("Click to set a point"), "hint.touchPainting")
				})), s.createdLineTool.subscribe(null, (function() {
					const e = s.tool.value();
					"LineToolPath" === e && p("hint.finishBuildPathByDblClick") ? g((0, r.t)("Double-click to finish Path"), "hint.finishBuildPathByDblClick") : "LineToolPolyline" === e && p("hint.finishBuildPolylineByDblClick") && g((0, r.t)("Double-click to finish Polyline"), "hint.finishBuildPolylineByDblClick")
				})), s.finishedLineTool.subscribe(null, (function() {
					if (h) {
						const e = s.tool.value();
						"LineToolPath" === e ? m("hint.finishBuildPathByDblClick") : "LineToolPolyline" === e && m("hint.finishBuildPolylineByDblClick")
					}
				})), e.layoutSizesChanged().subscribe((function() {
					if (!p("hint.startResizingChartInLayout")) return;
					g((0, r.t)("Double-click any edge to reset layout grid"), "hint.startResizingChartInLayout")
				})), t || l.CheckMobile.any() || !p("hint.startFocusedZoom") || (_ = function(e, t) {
					let i = !1;
					const n = r => {
						r ? (i && t(r),
							e.onZoom().unsubscribe(null, n)) : i || (t(r), i = !0)
					};
					return e.onZoom().subscribe(null, n), () => e.onZoom().unsubscribe(null, n)
				}(e, (function(e) {
					if (!p("hint.startFocusedZoom")) return;
					if (e) h && (_ = null, m("hint.startFocusedZoom"));
					else {
						const e = c.isMacKeyboard ? "âŒ˜" : "Ctrl";
						g((0, r.t)("Press and hold {key} while zooming to maintain the chart position").format({
							key: e
						}), "hint.startFocusedZoom")
					}
				})))
			}
		},
		760641: (e, t, i) => {
			"use strict";
			i.d(t, {
				ChartPage: () => c
			});
			var n = i(262325),
				r = i.n(n),
				o = i(581996),
				s = i(484443),
				a = i(611688);
			const l = a.enabled("no_min_chart_width");
			class c {
				constructor(e) {
					this._processVisibility = e => {
						const t = e.container.value();
						return this._affectsLayout(e.name) ? (t && t.classList.toggle("js-hidden", !1), !0) : (t && t.classList.toggle("js-hidden", !0), !1)
					}, this._setWidth = (e, t) => {
						let i = t;
						this._fullscreenArea !== e.name && (e.availWidth.setValue(t), e.canNegotiate.width && (i = (0, s.determineSize)(t, e.negotiations.width)));
						const n = e.container.value();
						return n && (n.style.width = i + "px"), e.width.setValue(i), i
					}, this._setHeight = (e, t) => {
						let i = t;
						this._fullscreenArea !== e.name && (e.availHeight.setValue(t), e.canNegotiate.height && (i = (0, s.determineSize)(t, e.negotiations.height)));
						const n = e.container.value();
						return n && (n.style.height = i + "px"), e.height.setValue(i), i
					};
					const t = e.container.value();
					if (!t) throw new Error("bridge.container.value() must be an element");
					this._container = t, this._availableAreas = ["left", "tradingpanel", "right", "top", "bottom", "center", "topleft", "extratop"], this._areas = {}, this._bridge = e, this._width = e.width, this._height = e.height, this._width.subscribe((() => this.recalculate())), this._height.subscribe((() => this.recalculate())), this._bridge.visible.subscribe((() => this._updateVisibility())), this._bridge.fullscreen.subscribe((() => this._onParentFullscreenChange())), this.recalculate()
				}
				allocate(e) {
					const t = e && e.areaName;
					if (-1 === this._availableAreas.indexOf(t)) throw new Error("unknown options.areaName");
					this.free(t);
					const i = this._createDOM(t),
						n = {
							name: t,
							canNegotiate: {
								width: "left" === t || "right" === t || "tradingpanel" === t || "topleft" === t,
								height: "top" === t || "bottom" === t || "topleft" === t || "extratop" === t
							},
							negotiations: {
								width: [],
								height: []
							},
							remove: () => {
								for (const e in this._areas) this._areas[e] === n && this.free(e)
							},
							negotiateWidth: e => {
								if (!n.canNegotiate.width) return;
								const t = (0, s.processNegotiation)(e);
								(0, s.negotiationsAreEqual)(n.negotiations.width, t) || (n.negotiations.width = t, this.recalculate())
							},
							negotiateHeight: e => {
								if (!n.canNegotiate.height) return;
								const t = (0, s.processNegotiation)(e);
								(0, s.negotiationsAreEqual)(n.negotiations.height, t) || (n.negotiations.height = t, this.recalculate())
							},
							requestFullscreen: () => {
								this._fullscreenArea || ("right" !== t && "center" !== t || (this._fullscreenArea = t), "center" === t && this._bridge.requestFullscreen(), this._updateFullscreen())
							},
							exitFullscreen: () => {
								t === this._fullscreenArea && (this._fullscreenArea = void 0, "center" === t && this._bridge.exitFullscreen(), this._updateFullscreen())
							},
							width: new(r()),
							height: new(r()),
							availWidth: new(r()),
							availHeight: new(r()),
							alive: new(r())(!0),
							container: new(r())(i),
							visible: new(r())(!0),
							fullscreen: new(r())(!1),
							fullscreenable: new(r())("right" === t || "center" === t),
							rdState: new o.ResizerDetacherState
						};
					return n.rdState.pushOwner(n), this._areas[t] = n, n.rdState.owner.subscribe((e => {
						const i = n.container.value();
						if (e !== n) i && (i.innerHTML = "", i.parentElement && i.parentElement.removeChild(i));
						else {
							let e = null;
							for (let i = this._availableAreas.indexOf(t); i--;) {
								const t = this._availableAreas[i];
								if (this._affectsLayout(t)) {
									e = this._areas[t].container.value();
									break
								}
							}
							i && (e && i.parentElement ? i.insertAdjacentElement("afterend", e) : this._container.appendChild(i))
						}
						this.recalculate()
					}), {
						callWithLast: !0
					}), n.rdState.bridge()
				}
				free(e) {
					const t = this._areas[e];
					if (!t) return;
					this._areas[e] = void 0;
					const i = t.container.value();
					i && i.parentElement && i.parentElement.removeChild(i), t.alive.setValue(!1)
				}
				recalculate() {
					const e = {};
					this._recalcSingleRunToken = e;
					const t = this._areas.topleft,
						i = this._areas.left,
						n = this._areas.tradingpanel,
						r = this._areas.right,
						o = this._areas.top,
						s = this._areas.bottom,
						a = this._areas.center,
						c = this._areas.extratop,
						d = this._width.value(),
						u = this._height.value();
					let h = 0,
						_ = 0,
						g = 0,
						p = 0,
						m = 0,
						v = 0,
						f = 0,
						b = 0;
					if (e === this._recalcSingleRunToken && c && this._processVisibility(c) && (b = this._setHeight(c, u), this._setWidth(c, d)), e === this._recalcSingleRunToken && t && this._processVisibility(t)) {
						f = this._setHeight(t, u), v = this._setWidth(t, d);
						const e = t.container.value();
						e && (e.style.top = b + "px")
					}
					let y = 0;
					if (e === this._recalcSingleRunToken && o && this._processVisibility(o)) {
						const e = o.container.value();
						e && (e.style.left = v + "px", e.style.top = b + "px");
						const t = d - v;
						this._setWidth(o, t), h = this._setHeight(o, u), h && (y = 1)
					}
					if (e === this._recalcSingleRunToken && i && this._processVisibility(i)) {
						const e = Math.max(f, h),
							t = i.container.value();
						g = this._setWidth(i, d), g && (g += 4), g && 1 === y && (y = 4), t && (t.style.top = e + b + y + "px"), this._setHeight(i, u - e - b)
					}
					if (e === this._recalcSingleRunToken && n && this._processVisibility(n)) {
						let e = d - g;
						l || (e -= 300), m = this._setWidth(n, e), m && 1 === y && (y = 4), this._setHeight(n, u - b - h - y)
					}
					if (e === this._recalcSingleRunToken && r && this._processVisibility(r)) {
						let e = d - g - m;
						l || (e -= 300), p = this._setWidth(r, e), p && 1 === y && (y = 4), this._setHeight(r, u - b - h - y);
						const t = r.container.value();
						t && (t.style.top = h + b + y + "px", t.classList.toggle("no-border-top-left-radius", Boolean(m)))
					}
					const S = m + p;
					let w = 0;
					const C = d - g - m - p - (S ? 4 : 0);
					if (e === this._recalcSingleRunToken && s && this._processVisibility(s)) {
						const e = s.container.value();
						e && (e.style.left = g + "px", e.classList.toggle("no-border-top-left-radius", !g), e.classList.toggle("no-border-top-right-radius", !S)), this._setWidth(s, C);
						const t = u - b;
						w = Math.min(300, t - 0), _ = this._setHeight(s, t) + 4
					}
					const P = Boolean(h && (g || S));
					if (this._container.classList.toggle("layout-with-border-radius", P), e === this._recalcSingleRunToken && a && this._processVisibility(a)) {
						const e = a.container.value();
						e && (e.style.left = g + "px", e.style.top = h + b + y + "px", e.classList.toggle("no-border-bottom-left-radius", !_ || !g), e.classList.toggle("no-border-bottom-right-radius", !S || !_), e.classList.toggle("no-border-top-left-radius", Boolean(!g && S)), e.classList.toggle("no-border-top-right-radius", Boolean(g && !S))), this._setWidth(a, C);
						const t = u - h - _ - b - y;
						this._setHeight(a, Math.max(t, w))
					}
					if (e === this._recalcSingleRunToken && n && this._affectsLayout("tradingpanel")) {
						const e = n.container.value();
						e && (e.style.right = p + "px", e.style.top = b + h + y + "px", e.style.borderTopLeftRadius = P ? "4px" : "0px")
					}
					e === this._recalcSingleRunToken && this._updateVisibility()
				}
				_affectsLayout(e) {
					const t = this._areas[e];
					if (!t) return !1;
					if (t.rdState.owner.value() !== t) return !1;
					if (this._fullscreenArea && this._fullscreenArea !== e) return d(e);
					if (this._width.value() <= 567 || this._height.value() <= 445) {
						if (!["center", "top", "left", "topleft", "extratop"].includes(e)) return !1
					}
					return !0
				}
				_updateVisibility() {
					const e = this._bridge.visible.value();
					for (let t = 0; t < this._availableAreas.length; t++) {
						const i = this._availableAreas[t],
							n = this._areas[i];
						n && (e && this._affectsLayout(i) ? n.visible.setValue(!0) : n.visible.setValue(!1))
					}
				}
				_onParentFullscreenChange() {
					this._bridge.fullscreen.value() || (this._fullscreenArea = void 0, this._updateFullscreen())
				}
				_updateFullscreen() {
					const e = void 0 !== this._fullscreenArea;
					for (let t = 0; t < this._availableAreas.length; t++) {
						const i = this._availableAreas[t],
							n = this._areas[i];
						if (!n) continue;
						if (i === this._fullscreenArea) {
							n.fullscreen.setValue(!0);
							continue
						}
						n.fullscreen.setValue(!1);
						const r = n.container.value();
						r && r.classList.toggle("js-hidden", e && !d(i))
					}
					this._updateVisibility(), this.recalculate()
				}
				_createDOM(e) {
					const t = document.createElement("div");
					return t.classList.add("layout__area--" + e), t.style.position = "absolute", "tradingpanel" === e && (t.style.overflow = "hidden", t.style.borderTopLeftRadius = "4px"), "bottom" === e ? t.style.bottom = "0" : t.style.top = "0", "right" === e || "tradingpanel" === e ? t.style.right = "0" : t.style.left = "0", t
				}
			}

			function d(e) {
				const t = a.enabled("side_toolbar_in_fullscreen_mode"),
					i = a.enabled("header_in_fullscreen_mode");
				return "center" === e || "left" === e && t || "top" === e && i
			}
		},
		372006: (e, t, i) => {
			"use strict";
			i.r(t), i.d(t, {
				SupportTicketData: () => S
			});
			var n = i(611688),
				r = i(849289),
				o = i.n(r),
				s = i(260339),
				a = i(110933),
				l = i(314802),
				c = i(638456),
				d = i(588948),
				u = i(582950),
				h = i(911905),
				_ = (i(659863), i(501867)),
				g = i.n(_),
				p = i(62802),
				m = i.n(p);

			function v(e) {
				const t = {
					name: e.name,
					time: e.startTime
				};
				return "measure" === e.entryType && (t.duration = e.duration), t
			}

			function f() {
				const e = navigator.connection;
				return {
					effectiveType: e && e.effectiveType || "unknown",
					rtt: e && e.rtt || -1
				}
			}
			var b = i(809965);
			const y = (0, h.getLogger)("Support.TicketData");
			class S {
				constructor(e = {}) {
					this._options = e, this.reset()
				}
				destroy() {
					delete this._data, delete this._browserInfo, delete this._dialogElement
				}
				reset() {
					this._data = {
						event: "support_ticket"
					}, this._browserInfo = new(o())
				}
				setOptions(e) {
					this._options = {
						...this._options,
						...e
					}
				}
				getData() {
					return this._data
				}
				addData(e) {
					Object.assign(this._data, e)
				}
				setDialogElement(e) {
					this._dialogElement = e
				}
				async getFinalData() {
					void 0 !== this._beforeCollectingFinalData && await this._beforeCollectingFinalData();
					const e = this._options.disableAutoCollection ? this.getData() : await this._collectData();
					return (0, u.isFinalNewTicketData)(e) ? e : (y.logError("Not enough data collected. `event` and one of (`userId`, `email`) fields required."), null)
				}
				onBeforeCollectingFinalData(e) {
					this._beforeCollectingFinalData = e
				}
				tradingDataPromise() {
					return this._tradingDataPromise
				}
				onTradingData(e) {
					this._tradingDataPromise = e
				}
				static setChartWidgetCollection(e) {
					S._chartWidgetCollection = e
				}
				static getChartWidgetCollection() {
					return S._chartWidgetCollection
				}
				static setScreener(e) {
					S._screener = e
				}
				static getScreener() {
					return S._screener
				}
				_collectData() {
					const e = Promise.all([this._getChartSnapshot(), this._getTradingLogs(), this._getScreenerParams(), this._getPageSnapshot(), this._getLogHistory(), this._getDesktopReports()]).then((e => {
						this.addData(this._filterEmptyFields({
							snapshotURL: e[0],
							trading: e[1],
							screener: e[2],
							pageSnapshotURL: e[3],
							log: e[4],
							desktopReports: e[5]
						}))
					})).then((() => this._data));
					return this.addData(this._filterEmptyFields({
						browserInfo: this._getBrowserInfo(),
						ping: this._getPingInfo(),
						user: this._getUser(),
						userId: this._getUserId(),
						pro_plan: this._getProPlan(),
						websocketAddress: this._getWebSocketAddress(),
						sessionid: this._getSessionId(),
						ref: this._getReferrer(),
						js_errors: this._getJsErrors(),
						product: this._getProductId(),
						symbolSessionId: this._getSymbolSessionId(),
						dividendsAdjustment: this._getDividendsAdjustment(),
						backAdjustment: this._getBackAdjustment(),
						settlementAsClose: this._getSettlementAsClose(),
						chartSessionDisconnects: this._getChartSessionDisconnects(),
						marketStatuses: this._getChartMarketStatuses(),
						seriesStatuses: this._getChartSeriesStatuses(),
						is_pro: this._getUserIsPro(),
						subscription_state: this._getSubscriptionState(),
						proOffers: this._getProOffers(),
						timezone: this._getTimezone(),
						performanceMetrics: this._getPerformanceMetrics(),
						serverInfo: this._getServerInfo(),
						serverTimeOffset: this._getServerTimeOffset(),
						settings: this._getUserSettings(),
						domNodesCount: this._getDomNodesCount(),
						buildTime: this._getBuildTime(),
						plugins: this._getPlugins(),
						locale: this._getLocale()
					})), e
				}
				_getBrowserInfo() {
					return this._browserInfo.state()
				}
				_getChartSnapshot() {
					return new Promise((async e => {
						const t = S.getChartWidgetCollection();
						if (void 0 === t) return y.logWarn("Abort generating snapshot. No chartWidgetCollection found."), void e(null);
						const i = n.enabled("snapshot_trading_drawings");
						try {
							n.enable("snapshot_trading_drawings"), await (0, s.takeChartSnapshot)(t, (t => {
								const i = n.enabled("charting_library_base") ? `https://www.tradingview.com/x/${t}` : `${location.protocol}//${location.host}/x/${t}`;
								e(i)
							}), (() => {
								y.logError("Failed to take chart snapshot."), e(null)
							}), {
								showHeaderMainSymbol: !0
							})
						} catch (t) {
							return y.logError(`Error while taking chart snapshot: ${t.message}`), void e(null)
						} finally {
							i ? n.enable("snapshot_trading_drawings") : n.disable("snapshot_trading_drawings")
						}
					}))
				}
				_getTradingLogs() {
					return new Promise((e => {
						if (!this._data.tradingLogsAgree) return y.logWarn("Abort collecting trading logs. User did not agree to send trading logs."), void e(null);
						const t = (0, a.tradingService)();
						if (!t) return y.logWarn("Abort collecting trading logs. No trading object found."), void e(null);
						const i = t.activeBroker();
						if (null === i || !i.bugReportInfo || 1 !== i.connectionStatus()) return y.logWarn("Abort collecting trading logs because of connection or abscence of info collection method."), void e(null);
						i.bugReportInfo().then((t => e(JSON.stringify(t)))).catch((t => (y.logError(`Error while collecting activeBroker info: ${t.message}`), e(null))))
					}))
				}
				_getScreenerParams() {
					return new Promise((e => {
						const t = S.getScreener();
						if (void 0 === t) return y.logWarn("Abort collecting screener params. No screener found."), void e(null);
						e(t.getCurrentState())
					}))
				}
				_getProductId() {
					return (0, l.isOnMobileAppPage)("old") ? "ios" : (0, l.isOnMobileAppPage)("new") ? "android" : (0, c.isDesktopApp)() ? "desktop" : n.enabled("charting_library_base") ? "charting_library" : "tv"
				}
				_getSymbolSessionId() {
					const e = S.getChartWidgetCollection();
					if (!e) return y.logWarn("Abort getting sessionId property value. No chartWidgetCollection found."), null;
					let t;
					try {
						t = e.activeChartWidget.value().model().mainSeries().properties().childs().sessionId.value()
					} catch (e) {
						return y.logError(`Error while getting sessionId property value: ${e.message}`), null
					}
					return "string" == typeof t ? t : null
				}
				_getDividendsAdjustment() {
					const e = S.getChartWidgetCollection();
					if (!e) return y.logWarn("Abort getting dividendsAdjustment property value. No chartWidgetCollection found."), null;
					let t;
					try {
						t = e.activeChartWidget.value().model().mainSeries().properties().childs().dividendsAdjustment.value()
					} catch (e) {
						return y.logError(`Error while getting dividendsAdjustment property value: ${e.message}`), null
					}
					return "boolean" == typeof t ? t : null
				}
				_getBackAdjustment() {
					const e = S.getChartWidgetCollection();
					if (!e) return y.logWarn("Abort getting backAdjustment property value. No chartWidgetCollection found."), null;
					let t;
					try {
						t = e.activeChartWidget.value().model().mainSeries().properties().childs().backAdjustment.value()
					} catch (e) {
						return y.logError(`Error while getting backAdjustment property value: ${null==e?void 0:e.message}`), null
					}
					return "boolean" == typeof t ? t : null
				}
				_getSettlementAsClose() {
					const e = S.getChartWidgetCollection();
					if (!e) return y.logWarn("Abort getting settlementAsClose property value. No chartWidgetCollection found."), null;
					let t;
					try {
						t = e.activeChartWidget.value().model().mainSeries().properties().childs().settlementAsClose.value()
					} catch (e) {
						return y.logError(`Error while getting settlementAsClose property value: ${null==e?void 0:e.message}`), null
					}
					return "boolean" == typeof t ? t : null
				}
				_getChartSessionDisconnects() {
					return window.ChartApiInstance ? window.ChartApiInstance.disconnectCount() : (y.logWarn("Abort getting chart session disconnects count. No ChartApiInstance found."), null)
				}
				_getChartMarketStatuses() {
					const e = S.getChartWidgetCollection();
					return e ? e.chartMarketStatuses() : (y.logWarn("Abort getting market statuses. No chartWidgetCollection found."), [])
				}
				_getChartSeriesStatuses() {
					const e = S.getChartWidgetCollection();
					return e ? e.chartSeriesStatuses() : (y.logWarn("Abort getting series statuses. No chartWidgetCollection found."), [])
				}
				_getUserIsPro() {
					return Boolean(window.user && window.user.is_pro)
				}
				_getSubscriptionState() {
					return window.pro && window.pro.isPaidPro() ? u.SubscriptionState.IsPro : window.user.had_pro ? u.SubscriptionState.ExPro : void 0
				}
				_getProOffers() {
					return window.pro && window.pro.offers && window.pro.offers() || []
				}
				_getTimezone() {
					const e = S.getChartWidgetCollection();
					if (!e) return y.logWarn("Abort getting timezone. No chartWidgetCollection found."), null;
					let t = null;
					try {
						t = e.activeChartWidget.value().model().model().properties().childs().timezone.value()
					} catch (e) {
						y.logError(`Error while getting timezone: ${e.message}`)
					}
					return t
				}
				_getPerformanceMetrics() {
					return function() {
						if (!window.performance || !performance.getEntriesByType) return null;
						const e = performance.getEntriesByType("navigation");
						if (0 === e.length) return null;
						const t = e[0];
						let i = performance.getEntriesByType("mark");
						i = i.slice(Math.max(i.length - 1e3, 0));
						let n = performance.getEntriesByType("paint");
						n = n.slice(Math.max(n.length - 1e3, 0));
						let r = performance.getEntriesByType("measure");
						return r = n.slice(Math.max(r.length - 1e3, 0)), {
							connection: f(),
							navigation: t.toJSON && t.toJSON() || "unknown",
							paints: n.map(v),
							marks: i.map(v),
							measures: r.map(v)
						}
					}()
				}
				_sortLogs(e, t) {
					return e.timestamp - t.timestamp
				}
				async _getLogHistory() {
					let e;
					try {
						let t = (0, h.getRawLogHistory)();
						g().ownPushStream() || (t = t.concat(await g().getLogs())), e = t.sort(this._sortLogs).map(h.serializeLogHistoryEntry).join("\n").slice(-8e6)
					} catch (t) {
						y.logWarn(`Error while collecting log history: ${t.message}`), e = JSON.stringify({
							error: "logger.getLogHistory(maxLen) failed: " + t.message,
							stack: t.stack
						})
					}
					return e
				}
				async _getDesktopReports() {
					return window.TVD && window.TVD.getReports ? window.TVD.getReports() : null
				}
				_getPingInfo() {
					if (!window.ChartApiInstance) return y.logWarn("Abort getting chart session disconnects count. No ChartApiInstance found."), [];
					const e = window.ChartApiInstance.getPingInfo();
					return null !== e ? [e.min, e.max, e.avg] : []
				}
				_getUserId() {
					return window.user && window.user.id ? window.user.id : null
				}
				_getUser() {
					return window.user && window.user.username || "Guest"
				}
				_getProPlan() {
					return window.user && window.user.pro_plan && window.user.pro_plan !== b.ProPlans.Free ? window.user.pro_plan : null
				}
				_getWebSocketAddress() {
					return window.WSBackendConnection ? window.WSBackendConnection.getHost() : (y.logWarn("Abort getting websocket address. No WSBackendConnection found."), null)
				}
				_getSessionId() {
					return window.ChartApiInstance ? window.ChartApiInstance.sessionid : (y.logWarn("Abort getting websocket address. No ChartApiInstance found."), null)
				}
				_getReferrer() {
					return location.href
				}
				_getJsErrors() {
					return window.__tv_js_errors.slice(0, 10)
				}
				_filterEmptyFields(e) {
					const t = {};
					for (const i in e)
						if (e.hasOwnProperty(i)) {
							const n = e[i];
							null != n && (!Array.isArray(n) || n.length > 0) && (t[i] = n)
						} return t
				}
				_getServerInfo() {
					const e = document.querySelector('meta[name="tv:server-name"]');
					return null !== e ? e.getAttribute("content") : null
				}
				_getServerTimeOffset() {
					return window.ChartApiInstance ? String(Math.round(window.ChartApiInstance.serverTimeOffset())) + "s" : (y.logWarn("Abort getting server time offset. No ChartApiInstance found."), null)
				}
				_getUserSettings() {
					{
						const e = m().keys().reduce(((e, t) => {
							const i = m().getValue(t);
							if (i) try {
								e[t] = JSON.parse(i)
							} catch (n) {
								e[t] = i
							}
							return e
						}), {});
						return JSON.stringify(e).slice(0, 5e5)
					}
				}
				_getDomNodesCount() {
					return document.querySelectorAll("*").length
				}
				async _getPageSnapshot() {
					return this._data.screenshotAgree ? Promise.all([i.e(32689), i.e(142)]).then(i.bind(i, 311702)).then((async e => {
						try {
							return await e.generatePageSnapshot({
								logging: !1,
								ignoreElements: e => e === this._dialogElement
							})
						} catch (e) {
							return y.logError(e), null
						}
					})) : (y.logWarn("Abort creating page snapshot. User did not agree to send page snapshot."), null)
				}
				_getBuildTime() {
					return window.BUILD_TIME
				}
				_getPlugins() {
					return void 0 !== navigator.plugins ? Array.from(navigator.plugins).map((e => ({
						name: e.name,
						filename: e.filename,
						description: e.description
					}))) : []
				}
				_getLocale() {
					var e, t;
					return null !== (t = null === (e = (0, d.getFreshInitData)().currentLocaleInfo) || void 0 === e ? void 0 : e.flag) && void 0 !== t ? t : null
				}
			}
		},
		582950: (e, t, i) => {
			"use strict";
			var n, r, o, s, a, l, c, d, u, h, _;

			function g(e) {
				return void 0 !== e.event && void 0 !== e.userId || void 0 !== e.email
			}
			i.d(t, {
					CoreActiveIssueType: () => n,
					CoreLegacyIssueType: () => r,
					TVOnlyActiveIssueType: () => o,
					TVOnlyLegacyIssueType: () => s,
					AdditionalIssueType: () => a,
					SubscriptionState: () => l,
					isFinalNewTicketData: () => g,
					TicketNoteState: () => c,
					TicketPublicStatus: () => d,
					SatisfactionStatus: () => u,
					FreshdeskProduct: () => h,
					FreshdeskTags: () => _
				}),
				function(e) {
					e.Chart = "Chart", e.Trading = "Trading issue"
				}(n || (n = {})),
				function(e) {
					e.Other = "Other", e.DrawingIssue = "Drawings issue", e.StudyNotLoading = "Study not loading", e.SlowChart = "Slow scrolling or chart loading"
				}(r || (r = {})),
				function(e) {
					e.Data = "Data", e.PineScript = "Pine Script issue", e.Alert = "Alerts issue", e.Billing = "Billing", e.Screener = "Screener", e.SocialNetwork = "Social network", e.Watchlist = "Watchlist", e.MobileApps = "Mobile apps", e.Desktop = "Desktop", e.Financials = "Financials", e.ProfileSettings = "Profile settings", e.AccountRecovery = "Account recovery", e.Blackfriday = "Black Friday", e.Cybermonday = "Cyber Monday", e.PaymentSearch = "Payment search"
				}(o || (o = {})),
				function(e) {
					e.Unsubscribe = "Unsubscribe", e.ChartDoesNotLoad = "Chart does not load", e.NoRealTimeData = "No real-time data", e.GapInTheData = "Gap in the data", e.PriceIncorrect = "Price incorrect"
				}(s || (s = {})),
				function(e) {
					e.Refund = "Refund"
				}(a || (a = {})),
				function(e) {
					e.IsPro = "Is PRO", e.ExPro = "Ex-PRO"
				}(l || (l = {})),
				function(e) {
					e.FromAgent = "0", e.FromUser = "2"
				}(c || (c = {})),
				function(e) {
					e.Received = "Received", e.InProgress = "In Progress", e.Closed = "Closed"
				}(d || (d = {})),
				function(e) {
					e[e.Good = 103] = "Good", e[e.Average = 100] = "Average", e[e.Bad = -103] = "Bad"
				}(u || (u = {})),
				function(e) {
					e[e.Production = 43000002188] = "Production", e[e.ProductionFree = 43000002552] = "ProductionFree", e[e.ProductionRefunds = 43000007194] = "ProductionRefunds", e[e.Staging = 43000002187] = "Staging", e[e.StagingFree = 43000002553] = "StagingFree", e[e.StagingRefunds = 43000007193] = "StagingRefunds"
				}(h || (h = {})),
				function(e) {
					e.NoSatisfactionSurveys = "No satisfaction surveys", e.RefundRequested = "Refund requested"
				}(_ || (_ = {}))
		},
		487381: (e, t, i) => {
			"use strict";
			i.d(t, {
				setupTrackingModePopupHint: () => l
			});
			var n = i(62802),
				r = i(308170),
				o = i(638456),
				s = i(345848),
				a = i(611688);

			function l(e) {
				if (!o.CheckMobile.any() || Boolean(n.getBool("hint.trackingMode")) || !a.enabled("popup_hints")) return;
				const t = o => {
					const a = r.tool.value();
					((0, r.toolIsCursor)(a) || "eraser" === a) && (o.preventDefault(), o.stopPropagation(),
						Promise.all([i.e(10146), i.e(90519), i.e(90926), i.e(8834), i.e(30063), i.e(30178), i.e(75514), i.e(92697), i.e(35174)]).then(i.bind(i, 416108)).then((e => {
							e.render(document.createElement("div"), (() => {
								n.setValue("hint.trackingMode", !0, {
									forceFlush: !0
								}), (0, s.trackEvent)("GUI", "Tracking Mode")
							}))
						})), e.removeEventListener("touchstart", t, !0))
				};
				e.addEventListener("touchstart", t, !0)
			}
		},
		24958: (e, t, i) => {
			"use strict";
			i.d(t, {
				TradingBootloader: () => u
			});
			var n = i(564894),
				r = i(510013),
				o = i(440135),
				s = i(62802),
				a = i.n(s),
				l = i(611688),
				c = i(41872),
				d = i(440977);
			class u extends r.ChunkLoader {
				constructor(e) {
					super(), this._options = e;
					const t = a().getBool(c.settingsKeys.TRADING_PANEL_OPENED, l.enabled("show_order_panel_on_start"));
					if (window.is_authenticated && t) {
						const e = (0, o.getThemedColor)("color-pane-bg");
						this._options.resizerBridge.negotiateWidth(a().getInt(c.settingsKeys.PANEL_WIDTH) || d.panelWidth), this._options.resizerBridge.negotiateHeight(d.panelHeight), this._options.resizerBridge.container.value().style.setProperty("background-color", e)
					}
				}
				async _startLoading() {
					return this._loadTrading()
				}
				async _loadTrading() {
					const {
						resizerBridge: e,
						chartWidgetCollection: t
					} = this._options, [{
						TRADING_SERVICE: r
					}, {
						Trading: o
					}] = await Promise.all([Promise.all([i.e(10146), i.e(90519), i.e(90926), i.e(8834), i.e(30063), i.e(80580), i.e(68074), i.e(52498), i.e(64746), i.e(20104), i.e(75514), i.e(99379), i.e(33406), i.e(59255), i.e(97920), i.e(67993), i.e(92697), i.e(89029), i.e(40079), i.e(25142)]).then(i.bind(i, 110933)), Promise.all([i.e(10146), i.e(90519), i.e(90926), i.e(8834), i.e(30063), i.e(80580), i.e(68074), i.e(52498), i.e(64746), i.e(20104), i.e(75514), i.e(99379), i.e(33406), i.e(59255), i.e(97920), i.e(67993), i.e(92697), i.e(89029), i.e(40079), i.e(25142)]).then(i.bind(i, 982513))]), s = new o(e);
					return n.registerService(r, s), void 0 !== t && s.setChartWidgetCollection(t), s
				}
			}
		},
		477600: (e, t, i) => {
			"use strict";
			i.d(t, {
				createStubElem: () => r
			});
			var n = i(420194);

			function r(e = [], t = []) {
				const i = document.createElement("div"),
					r = document.createElement("div");
				return i.appendChild(r), i.classList.add(n.container), r.classList.add(n.inner), e.forEach((e => {
					i.classList.add(n[e])
				})), t.forEach((e => {
					i.classList.add(n[e])
				})), i
			}
		},
		194892: (e, t, i) => {
			"use strict";
			i.d(t, {
				TOOLBAR_WIDTH_EXPANDED: () => n
			});
			const n = 52
		},
		414471: (e, t, i) => {
			"use strict";
			i.d(t, {
				DrawingToolbarBootloader: () => a
			});
			var n = i(670503),
				r = i(194892),
				o = i(510013),
				s = i(477600);
			class a extends o.ChunkLoader {
				constructor(e) {
					super(), this._opts = e, n.isDrawingToolbarVisible.value() && (this._opts.resizerBridge.negotiateWidth(r.TOOLBAR_WIDTH_EXPANDED), this._opts.resizerBridge.container.value().appendChild((0, s.createStubElem)()))
				}
				_startLoading() {
					return Promise.all([i.e(10146), i.e(90519), i.e(8348), i.e(37135), i.e(8834), i.e(5979), i.e(21834), i.e(13608), i.e(29331), i.e(11812), i.e(34539), i.e(86018), i.e(12065), i.e(80436), i.e(22647), i.e(29210), i.e(75514), i.e(98449), i.e(91890), i.e(67217), i.e(12878)]).then(i.bind(i, 725885)).then((e => new e.DrawingToolbarRenderer(this._opts.resizerBridge.container.value(), {
						...this._opts
					})))
				}
			}
		},
		670503: (e, t, i) => {
			"use strict";
			i.d(t, {
				isDrawingToolbarVisible: () => c
			});
			var n = i(62802),
				r = i(611688),
				o = i(262325),
				s = i.n(o);
			const a = !r.enabled("hide_left_toolbar_by_default"),
				l = n.getBool("ChartDrawingToolbarWidget.visible", a),
				c = new(s())(l)
		},
		548829: (e, t, i) => {
			"use strict";
			i.d(t, {
				HeaderToolbarBootloader: () => s
			});
			var n = i(351026),
				r = i(477600),
				o = i(510013);
			class s extends o.ChunkLoader {
				constructor(e, t) {
					super(), this._toolsBootloader = e, this._headerProps = t, this._headerProps.resizerBridge.negotiateHeight(n.HEADER_TOOLBAR_HEIGHT_EXPANDED), this._headerProps.resizerBridge.container.value().appendChild((0, r.createStubElem)())
				}
				_startLoading() {
					return Promise.all([this._toolsBootloader.load(), this._loadHeaderToolbar()]).then((([e, t]) => new t(this._headerProps.resizerBridge.container.value(), {
						...this._headerProps,
						tools: e
					})))
				}
				_loadHeaderToolbar() {
					return Promise.all([i.e(50522), i.e(26337), i.e(75514), i.e(20274), i.e(63005)]).then(i.bind(i, 108419)).then((e => e.HeaderToolbarRenderer))
				}
			}
		},
		351026: (e, t, i) => {
			"use strict";
			i.d(t, {
				HEADER_TOOLBAR_HEIGHT_EXPANDED: () => r,
				HEADER_TOOLBAR_HEIGHT_COLLAPSED: () => o
			});
			var n = i(335462);
			const r = parseInt(n["css-value-header-toolbar-height"]),
				o = 3
		},
		575242: (e, t, i) => {
			"use strict";
			i.r(t), i.d(t, {
				AutoSaveEnabledService: () => r
			});
			var n = i(713917);
			class r extends n.CommonJsonStoreService {
				constructor(e, t) {
					super(e, t, "AUTO_SAVE_ENABLED_CHANGED", "Chart.autoSaveEnabled", !0)
				}
			}
		},
		441058: (e, t, i) => {
			"use strict";
			i.d(t, {
				FavoriteStudyTemplateService: () => r
			});
			var n = i(713917);
			class r extends n.CommonJsonStoreService {
				constructor(e, t) {
					super(e, t, "FAVORITE_STUDY_TEMPLATES_CHANGED", "StudyTemplates.quicks", [])
				}
				remove(e) {
					this.set(this.get().filter((t => t !== e)))
				}
			}
		},
		436046: (e, t, i) => {
			"use strict";
			i.d(t, {
				TopLeftButtonBootloader: () => l
			});
			var n = i(510013),
				r = i(608249);
			const o = parseInt(r["top-left-button-height"]),
				s = parseInt(r["top-left-button-width"]);
			var a = i(763218);
			class l extends n.ChunkLoader {
				constructor(e) {
					super(), this._props = e, this._props.resizerBridge.negotiateHeight(o), this._props.resizerBridge.negotiateWidth(s), this._props.resizerBridge.container.value().appendChild(function() {
						const e = document.createElement("div");
						return e.classList.add(a.topLeftButton, a.stub), e
					}())
				}
				_startLoading() {
					return this._loadRenderer().then((e => new e(this._props.resizerBridge.container.value(), this._props)))
				}
				_loadRenderer() {
					return Promise.all([i.e(10146), i.e(90519), i.e(8348), i.e(37135), i.e(8834), i.e(22850), i.e(21834), i.e(89242), i.e(82739), i.e(37619), i.e(29331), i.e(24817), i.e(89587), i.e(86193), i.e(34539), i.e(91488), i.e(85775), i.e(24923), i.e(79020), i.e(75514), i.e(15995), i.e(70191), i.e(48792), i.e(39863)]).then(i.bind(i, 67514)).then((e => e.TopLeftButtonRenderer))
				}
			}
		},
		564757: (e, t, i) => {
			"use strict";

			function n(e) {
				return e.getAll().some((e => e.isInitialized()))
			}

			function r(e, t) {
				const i = e.getAll(),
					n = () => {
						t(), i.forEach((e => {
							e.chartWidgetInitialized.unsubscribe(null, n)
						}))
					};
				i.forEach((e => {
					e.chartWidgetInitialized.subscribe(null, n, !0)
				}))
			}
			i.r(t), i.d(t, {
				isAnyChartWidgetInitialized: () => n,
				waitAnyChartWidgetInitialized: () => r
			})
		},
		964304: (e, t, i) => {
			"use strict";
			i.d(t, {
				getFavoriteDrawingToolbarPromise: () => s,
				createFavoriteDrawingToolbar: () => a
			});
			var n = i(351026);
			let r = null,
				o = null;

			function s() {
				return o
			}

			function a() {
				null === o && (o = Promise.all([i.e(10146), i.e(90519), i.e(8348), i.e(37135), i.e(5979), i.e(78941), i.e(21834), i.e(95468), i.e(82739), i.e(44155), i.e(12580), i.e(24384), i.e(1689), i.e(74733), i.e(11812), i.e(74499), i.e(60990), i.e(54792), i.e(24782), i.e(29754), i.e(80436), i.e(46690), i.e(75514), i.e(29594), i.e(91622), i.e(91890), i.e(67217), i.e(80075), i.e(88607), i.e(22306)]).then(i.bind(i, 196786)).then((({
					FavoriteDrawingToolbar: e
				}) => (r = null !== r ? r : new e({
					left: window.innerWidth / 2,
					top: n.HEADER_TOOLBAR_HEIGHT_EXPANDED + 61
				}), r))))
			}
		},
		985692: (e, t, i) => {
			"use strict";
			i.d(t, {
				checkAuthBeforeSaveLoad: () => r
			});
			var n = i(611688);

			function r(e, t) {
				n.enabled("saveload_requires_authentication") ? window.runOrSignIn(e, t) : e()
			}
		},
		252477: (e, t, i) => {
			"use strict";
			i.d(t, {
				LoadChartService: () => l
			});
			var n = i(611688),
				r = i(147731),
				o = i(985692),
				s = i(410685),
				a = i(86674);
			class l extends s.DialogRenderer {
				constructor(e = null) {
					super(), this._chartWidgetCollection = null, this._promise = null, this._dialog = null, this._subscribe = e => {
						this._setVisibility(e)
					}, this._getChartEntry = e => ({
						id: e.id,
						url: e.url,
						title: e.name,
						symbol: e.short_symbol,
						interval: e.interval,
						toolsCount: 0,
						modified: e.modified_iso,
						favorite: e.favorite,
						active: () => this._isActiveChart(e.id),
						openAction: () => r.backend.loadChart(e),
						deleteAction: () => r.backend.removeChart(e.image_url).then((() => this._deleteChart(e.id))),
						favoriteAction: t => this._changeFavoriteState(t, e.id, e.image_url)
					}), this._updateFavorites = e => {
						var t;
						null === (t = this._favoriteChartsService) || void 0 === t || t.set(e)
					}, this._isActiveChart = e => null !== this._chartWidgetCollection && e === this._chartWidgetCollection.metaInfo.id.value(), this._deleteChart = e => {
						this._isActiveChart(e) && (n.enabled("saveload_storage_customization") ? null !== this._chartWidgetCollection && this._chartWidgetCollection.clearChartMetaInfo() : location.href = "/chart/" + location.search)
					}, this._chartWidgetCollection = e
				}
				showLoadDialog() {
					(0, o.checkAuthBeforeSaveLoad)(this._showLoadDialog.bind(this), {
						source: "Load chart",
						sourceMeta: "Chart"
					})
				}
				show() {
					this.showLoadDialog()
				}
				hide() {
					var e, t;
					null === (e = this._dialog) || void 0 === e || e.hide(), null === (t = this._dialog) || void 0 === t || t.visible().unsubscribe(this._subscribe)
				}
				_showLoadDialog() {
					(n.enabled("saveload_requires_authentication") && !window.is_authenticated ? Promise.resolve([]) : r.backend.getCharts()).then((e => e.map(this._getChartEntry))).then((e => {
						const t = this._promise = Promise.all([i.e(90519), i.e(8348), i.e(90926), i.e(37135), i.e(8834), i.e(30063), i.e(80580), i.e(68074), i.e(52498), i.e(5799), i.e(28111), i.e(52019), i.e(74733), i.e(11812), i.e(81208), i.e(40447), i.e(21765), i.e(70842), i.e(72145), i.e(75514), i.e(69397), i.e(83789), i.e(92697), i.e(80276), i.e(75009)]).then(i.bind(i, 394632)).then((i => {
							if (this._promise === t) {
								this._dialog && (this._dialog.hide(), this._dialog.visible().unsubscribe(this._subscribe));
								const t = {
									charts: e,
									favoriteChartsService: this._favoriteChartsService,
									chartWidgetCollection: this._chartWidgetCollection
								};
								this._dialog = new i.LoadChartDialogRenderer(t), this._dialog.visible().subscribe(this._subscribe), this._dialog.show()
							}
						}))
					}))
				}
				async _changeFavoriteState(e, t, i) {
					const n = Boolean(e[t]);
					await (0, a.fetch)(`/my-charts/${i}/change-favorite-state/`, {
						headers: {
							"Content-Type": "application/json"
						},
						method: "POST",
						body: JSON.stringify({
							favorite: n
						})
					})
				}
			}
		},
		501897: (e, t, i) => {
			"use strict";
			i.d(t, {
				SaveChartService: () => L
			});
			var n = i(611688),
				r = i(262325),
				o = i.n(r),
				s = i(575242),
				a = i(226722),
				l = i(62802),
				c = i(251954),
				d = i(911730),
				u = i(985692),
				h = i(125226);
			i(897116);
			var _ = i(575932),
				g = i(86674),
				p = i(552279),
				m = i(229534),
				v = i(503595),
				f = i(314802);
			const b = _.t("Error creating the chart layout copy"),
				y = _.t("We are doing some brief daily maintenance. Charts will be back really soon, thanks for your patience!"),
				S = _.t("Your browser seems to be offline");

			function w(e, t = {}) {
				window.runOrSignIn((() => {
					(0, v.asyncWindowOpen)(async function(e, t) {
						let i, n;
						try {
							n = await (0, g.fetch)(`/charts/${e}/clone/`, {
								method: "POST",
								body: JSON.stringify(t),
								credentials: "include"
							});
							const r = n.headers.get("location");
							if (n.ok && r) return (0, f.urlWithMobileAppParams)(r);
							i = (await n.json()).code
						} catch (e) {}
						"count_limit" === i || "login_required" === i ? (0, p.reloginOrGoPro)({
							feature: "savedChartsLimit"
						}) : n || !1 !== navigator.onLine ? n && n.status >= 500 || "feature_disabled" === i ? (0, m.showErrorDialog)({
							content: y
						}) : (0, m.showErrorDialog)({
							content: b
						}) : (0, m.showErrorDialog)({
							content: S
						});
						return
					}(e, t))
				}), {
					source: "Clone_chart_layout"
				})
			}
			var C = i(147731),
				P = i(560507),
				T = i(833813);
			async function I() {
				var e;
				if (!window.is_authenticated) return !1;
				if (!n.enabled("saved_charts_count_restriction")) return !0;
				const t = null === (e = (0, P.getConfig)(T.ProductFeatures.CHART_STORAGE)) || void 0 === e ? void 0 : e.limit;
				if (void 0 === t || t <= 0) return !1;
				try {
					return t > await new Promise(C.backend.getChartsCount)
				} catch (e) {
					return !1
				}
			}
			var E = i(779923);
			class A {
				constructor(e, t, i) {
					this._visibility = new(o())(!1), this._chartWidgetCollection = e, this._doSave = t, this._doLoad = i
				}
				hide() {
					var e;
					null === (e = this._hide) || void 0 === e || e.call(this), this._visibility.setValue(!1)
				}
				visible() {
					return this._visibility.readonly()
				}
				_showRenameDialog(e, t, i, n) {
					return (0, E.showRename)({
						title: this._renameDialogTitle(),
						text: this._renameDialogText(),
						maxLength: 64,
						initValue: e,
						onRename: async e => {
							this._renameActionHandler(e, t, i, n)
						},
						onClose: () => this._visibility.setValue(!1)
					})
				}
				_doSaveCurrentLayout(e, t, i, n) {
					const r = this._chartWidgetCollection.metaInfo.name.value();
					this._chartWidgetCollection.metaInfo.name.setValue(e), this._doSave(t, i, (() => {
						this._chartWidgetCollection.metaInfo.name.setValue(r), null == n || n()
					}))
				}
				_doOverwriteExistingLayout(e, t, i, n, r) {
					const o = this._chartWidgetCollection.metaInfo.name.value();
					this._chartWidgetCollection.metaInfo.id.setValue(e), this._chartWidgetCollection.metaInfo.name.setValue(t), this._doSave(i, n, (() => {
						this._chartWidgetCollection.metaInfo.name.setValue(o), null == r || r()
					}))
				}
			}
			class D extends A {
				cloneChart() {
					this._cloneChart().then((() => this._visibility.setValue(!0)))
				}
				show() {
					(0, u.checkAuthBeforeSaveLoad)((() => this.cloneChart()), {
						source: "Clone chart"
					})
				}
				_renameDialogTitle() {
					return (0, _.t)("Copy Chart Layout")
				}
				_renameDialogText() {
					return (0, _.t)("Enter a new chart layout name") + ":"
				}
				_renameActionHandler({
					newValue: e,
					dialogClose: t
				}) {
					n.enabled("saveload_storage_customization") ? this._doCloneCurrentLayout(e) : w(this._chartWidgetCollection.metaInfo.uid.value(), {
						name: e
					}), t()
				}
				async _cloneChart() {
					await new Promise((e => {
						window.runOrSignIn(e, {
							source: "Clone_chart_layout"
						})
					}));
					const e = await I();
					e ? e && (this._hide = await this._showRenameDialog(this._getInitialRenameDialogInput())) : (0, p.reloginOrGoPro)({
						feature: "savedChartsLimit"
					})
				}
				_doCloneCurrentLayout(e) {
					const t = this._chartWidgetCollection.metaInfo.name.value();
					this._chartWidgetCollection.metaInfo.uid.deleteValue(), this._chartWidgetCollection.metaInfo.id.deleteValue(), this._chartWidgetCollection.metaInfo.name.setValue(e), this._doSave(void 0, void 0, (() => {
						this._chartWidgetCollection.metaInfo.name.setValue(t)
					}))
				}
				_getInitialRenameDialogInput() {
					return (0, _.t)("{title} copy", {
						context: "ex: AAPL chart copy"
					}).format({
						title: this._chartWidgetCollection.metaInfo.name.value()
					})
				}
			}
			class k extends A {
				show(e, t, i) {
					this._saveNewChart(e, t, i).then((() => this._visibility.setValue(!0)))
				}
				_renameDialogTitle() {
					return (0, _.t)("Save New Chart Layout")
				}
				_renameDialogText() {
					return (0, _.t)("Enter a new chart layout name") + ":"
				}
				_renameActionHandler({
					newValue: e,
					dialogClose: t
				}, i, n, r) {
					this._doSaveCurrentLayout(e, i, n, r), t()
				}
				async _saveNewChart(e, t, i) {
					if (!await I()) return void(0, p.reloginOrGoPro)({
						feature: "savedChartsLimit"
					});
					const n = this._chartWidgetCollection.metaInfo.name.value();
					this._hide = await this._showRenameDialog(n, e, t, i)
				}
			}
			class W extends A {
				show() {
					(0, u.checkAuthBeforeSaveLoad)((() => this._show()), {
						source: "Rename chart"
					})
				}
				_renameDialogTitle() {
					return (0, _.t)("Rename Chart Layout")
				}
				_renameDialogText() {
					return (0, _.t)("Enter a new chart layout name") + ":"
				}
				_renameActionHandler({
					newValue: e,
					dialogClose: t
				}) {
					this._doSaveCurrentLayout(e), t()
				}
				async _show() {
					await this._renameChart(), this._visibility.setValue(!0)
				}
				async _renameChart() {
					const e = this._chartWidgetCollection.metaInfo.name.value();
					this._hide = await this._showRenameDialog(e)
				}
			}
			class L {
				constructor(e, t) {
					this._autosaveTimer = null, this._watchedAutoSaveEnabled = new(o()), this._toggleAutoSaveEnabledHandler = this._toggleAutoSaveEnabled.bind(this), this._doSave = (e, t, i, n) => {
							const r = this._chartWidgetCollection;
							void 0 !== e && e();
							const o = this._chartChangesWatcher.changes();
							this._chartSaver.saveChartSilently((e => {
								var i;
								i = r.metaInfo.uid.value(), "/chart/" === location.pathname && (location.href = "/chart/" + i), void 0 !== t && t(e)
							}), (() => {
								void 0 !== i && i()
							}), {
								autoSave: Boolean(n),
								changes: o
							})
						}, this._doLoad = () => C.backend.getCharts(), this._chartWidgetCollection = e, this._chartSaver = t, this._createController = new k(e, this._doSave, this._doLoad), this._renameController = new W(e, this._doSave, this._doLoad), this._saveAsController = new D(e, this._doSave, this._doLoad), this._autoSaveEnabledSetting = new s.AutoSaveEnabledService(a.TVXWindowEvents, l), this._chartSaver.chartSizeLimitExceeded().subscribe(null, (() => {
							const e = this._chartWidgetCollection.activeChartWidget.value();
							Promise.all([i.e(22850), i.e(55099), i.e(84845), i.e(50407), i.e(71452), i.e(56752), i.e(26820)]).then(i.bind(i, 233544)).then((({
								showSizeLimitExceededDialog: t
							}) => {
								t(e)
							}))
						})),
						this._chartChangesWatcher = new d.ChartChangesWatcher(e, t, c), e.saveKeysPressed().subscribe(this, this.saveChartOrShowTitleDialog); {
						const e = this._autoSaveEnabledSetting.get();
						e && this._enableAutoSave(), this._watchedAutoSaveEnabled.setValue(e), this._watchedAutoSaveEnabled.subscribe(this._toggleAutoSaveEnabledHandler), this._autoSaveEnabledSetting.getOnChange().subscribe(this, this._autoSaveEnabledSettingHandler)
					}
				}
				autoSaveEnabled() {
					return this._watchedAutoSaveEnabled
				}
				destroy() {
					this._watchedAutoSaveEnabled.unsubscribe(), delete this._watchedAutoSaveEnabled, this._autoSaveEnabledSetting.destroy(), delete this._autoSaveEnabledSetting
				}
				getCreateController() {
					return this._createController
				}
				getRenameController() {
					return this._renameController
				}
				getSaveAsController() {
					return this._saveAsController
				}
				cloneChart() {
					this._saveAsController.cloneChart()
				}
				saveChartAs() {
					this._saveAsController.show()
				}
				renameChart() {
					this._renameController.show()
				}
				saveNewChart(e, t, i) {
					this._createController.show(e, t, i)
				}
				saveExistentChart(e, t, i) {
					this._doSave(e, t, i)
				}
				changes() {
					return this._chartChangesWatcher.changes()
				}
				hasChanges() {
					return 0 !== this._chartChangesWatcher.changes()
				}
				saveChartOrShowTitleDialog(e, t, i) {
					const n = window.saver.isSaveInProcess(),
						r = this._chartChangesWatcher.hasChanges(),
						o = !!this._chartWidgetCollection.metaInfo.id.value();
					window.is_authenticated && (n || !r && o) || (0, u.checkAuthBeforeSaveLoad)((() => {
						null != this._chartWidgetCollection.metaInfo.id.value() ? this.saveExistentChart(e, t, i) : this.saveNewChart(e, t, i)
					}), {
						source: "Save chart",
						sourceMeta: "Chart"
					})
				}
				whenReadyToSave(e) {
					this._chartSaver.whenReadyToSave(e)
				}
				saveToJSON() {
					return this._chartSaver.saveToJSON()
				}
				saveChartSilently(e, t, i) {
					this._chartSaver.saveChartSilently(e, t, i)
				}
				setAutoSaveEnabled(e) {
					window.is_authenticated && window.saver.isSaveInProcess() || (0, u.checkAuthBeforeSaveLoad)((() => {
						this._watchedAutoSaveEnabled.setValue(e)
					}), {
						source: "AutoSave chart"
					})
				}
				saveChartLineTools(e, t, i) {
					return this._chartSaver.saveChartLineTools(e, t, i)
				}
				_autoSaveEnabledSettingHandler(e) {
					this._watchedAutoSaveEnabled.setValue(e)
				}
				_toggleAutoSaveEnabled(e) {
					window.is_authenticated && (e ? this._enableAutoSave() : this._disableAutoSave(), this._autoSaveEnabledSetting.set(e, {
						forceFlush: !0
					}))
				}
				_enableAutoSave() {
					this._chartChangesWatcher.getOnChange().subscribe(this, this._onStateChanged), this._chartChangesWatcher.hasChanges() && this._doSave()
				}
				_disableAutoSave() {
					this._stopAutosave(), this._chartChangesWatcher.getOnChange().unsubscribeAll(this)
				}
				_onStateChanged(e) {
					e ? this._startAutosave() : this._stopAutosave()
				}
				_startAutosave() {
					n.enabled("charts_auto_save") && null === this._autosaveTimer && (this._autosaveTimer = setTimeout((() => {
						this._autosaveTimer = null, window.is_authenticated ? this._chartWidgetCollection.metaInfo.id.value() && this._doSave(void 0, void 0, void 0, !0) : this._startAutosave()
					}), (0, h.isFeatureEnabled)("chart_autosave_2min") ? 12e4 : (0, h.isFeatureEnabled)("chart_autosave_3min") ? 18e4 : (0, h.isFeatureEnabled)("chart_autosave_5min") ? 3e5 : (0, h.isFeatureEnabled)("chart_autosave_7min") ? 42e4 : (0, h.isFeatureEnabled)("chart_autosave_10min") ? 6e5 : (0,
						h.isFeatureEnabled)("chart_autosave_20min") ? 12e5 : (0, h.isFeatureEnabled)("chart_autosave_30min") ? 18e5 : (0, h.isFeatureEnabled)("chart_autosave_year") ? 31536e6 : 6e4))
				}
				_stopAutosave() {
					null !== this._autosaveTimer && (clearInterval(this._autosaveTimer), this._autosaveTimer = null)
				}
			}
		},
		747113: (e, t, i) => {
			"use strict";
			i.d(t, {
				SharingChartService: () => s
			});
			var n = i(262325),
				r = i.n(n),
				o = i(226722);
			class s {
				constructor(e, t, i = 0) {
					this._requestInProgress = !1, this._watchedSharingEnabled = new(r()), this._sharingValueChangedEvent = "SharingValueChanged", this._uid = t, this._chartId = i, this._watchedSharingEnabled.setValue(e), o.TVXWindowEvents.on(this._sharingValueChangedEvent, (e => {
						const t = JSON.parse(e);
						this._chartId === t.chartId && this._watchedSharingEnabled.setValue(t.value)
					}))
				}
				destroy() {
					this._watchedSharingEnabled.unsubscribe()
				}
				sharingEnabled() {
					return this._watchedSharingEnabled.readonly()
				}
				setSharingEnabled(e) {
					window.runOrSignIn((() => this._setSharing(e)), {
						source: "Sharing chart"
					})
				}
				toggleSharing() {
					const e = !this._watchedSharingEnabled.value();
					return this.setSharingEnabled(e), e
				}
				async _setSharing(e) {
					if (!1 === this._requestInProgress && this._watchedSharingEnabled.value() !== e) {
						this._watchedSharingEnabled.setValue(e), this._sendSyncEvent({
							chartId: this._chartId,
							value: e
						});
						try {
							this._requestInProgress = !0, await this._saveSharingValue(e)
						} catch (t) {
							this._watchedSharingEnabled.setValue(!e), this._sendSyncEvent({
								chartId: this._chartId,
								value: !e
							})
						} finally {
							this._requestInProgress = !1
						}
					}
				}
				_sendSyncEvent(e) {
					o.TVXWindowEvents.emit(this._sharingValueChangedEvent, JSON.stringify(e))
				}
				_saveSharingValue(e) {
					const t = JSON.stringify({
						is_private: !e
					});
					return fetch(`/api/v1/charts/${this._uid}/sharing/`, {
						headers: new Headers({
							"Content-Type": "application/json"
						}),
						method: "POST",
						credentials: "same-origin",
						body: t
					})
				}
			}
		},
		984552: (e, t, i) => {
			"use strict";
			i.d(t, {
				StudyTemplates: () => _
			});
			var n = i(575932),
				r = i(147731),
				o = i(345848),
				s = i(97639),
				a = i.n(s),
				l = i(262325),
				c = i.n(l),
				d = i(779923);
			const u = (0, i(911905).getLogger)("Platform.StudyTemplates"),
				h = (0, n.t)("Do you really want to delete Study Template '{name}' ?");
			class _ {
				constructor(e) {
					this._chartWidgetCollection = e.chartWidgetCollection, this._favoriteStudyTemplatesService = e.favoriteStudyTemplatesService, window.loginStateChange.subscribe(null, r.backend.invalidateStudyTemplatesList), this._list = new(c())([]), this._onChange = new(a()), this._list.subscribe((() => this._onChange.fire()))
				}
				findRecordByName(e) {
					return this._list.value().find((t => t.name === e)) || null
				}
				showSaveAsDialog() {
					const e = this._chartWidgetCollection.activeChartWidget.value().model();
					Promise.all([i.e(10146), i.e(90519), i.e(90926), i.e(48181), i.e(8834), i.e(35354), i.e(5979), i.e(30063), i.e(78941), i.e(91670), i.e(53221), i.e(95468), i.e(80580), i.e(68074), i.e(52498), i.e(92617), i.e(28718), i.e(158), i.e(75514), i.e(92697), i.e(45553), i.e(36631)]).then(i.bind(i, 131271)).then((t => {
						new t.StudyTemplateSaver({
							controller: e,
							onSave: e => {
								this._list.setValue(e)
							}
						}).show()
					}))
				}
				applyTemplate(e) {
					const t = this.findRecordByName(e);
					null !== t ? window.runOrSignIn((() => {
						const e = this._chartWidgetCollection.activeChartWidget.value(),
							i = i => {
								(0,
									o.trackEvent)("GUI", "Load Study Template"), e.model().applyStudyTemplate(JSON.parse(i.content), t.name)
							};
						void 0 !== t.id ? t.is_default ? r.backend.getStandardStudyTemplateContentById(t.id, i) : r.backend.getStudyTemplateContentById(t.id, i) : r.backend.getStudyTemplateContent(t.name).then(i)
					}), {
						source: "Study templates apply"
					}) : u.logNormal(`Template ${e} not found in cache`)
				}
				deleteStudyTemplate(e) {
					const t = this.findRecordByName(e);
					null !== t ? this._removeTemplate(t) : u.logNormal(`Template ${e} not found in cache`)
				}
				list() {
					return this._list.value()
				}
				getOnChange() {
					return this._onChange
				}
				refreshStudyTemplateList(e) {
					r.backend.getStudyTemplatesList().then((t => {
						this._list.setValue(t), void 0 !== e && e()
					}))
				}
				invalidate() {
					r.backend.invalidateStudyTemplatesList()
				}
				_removeTemplate(e) {
					window.runOrSignIn((() => {
						(0, d.showConfirm)({
							text: h.format({
								name: e.name
							}),
							onConfirm: ({
								dialogClose: t
							}) => new Promise((i => {
								const n = () => {
									this.refreshStudyTemplateList((() => {
										const n = this.list();
										this._list.setValue(n.filter((t => t !== e))), this._favoriteStudyTemplatesService && this._favoriteStudyTemplatesService.remove(e.name), i(), t()
									}))
								};
								r.backend.invalidateStudyTemplatesList(), void 0 !== e.id ? r.backend.removeStudyTemplateById(e.id, n) : r.backend.removeStudyTemplate(e.name).then(n)
							}))
						})
					}), {
						source: "Study templates delete"
					})
				}
			}
		},
		260339: (e, t, i) => {
			"use strict";
			i.d(t, {
				takeChartSnapshotPromise: () => a,
				takeChartSnapshot: () => l,
				makeSnapshotRequest: () => c
			});
			i(897116);
			var n = i(575932),
				r = i(611688),
				o = i(229534),
				s = i(86674);

			function a(e, t = {}) {
				return new Promise(((i, n) => {
					l(e, i, n, t)
				}))
			}
			async function l(e, t, i, n = {}) {
				var r;
				const o = new FormData;
				if (void 0 !== n.previews)
					for (const e of n.previews) o.append("previews[]", e);
				void 0 !== n.cme && o.append("cme", String(n.cme)), void 0 !== n.wl && o.append("wl", String(n.wl)), void 0 !== n.onWidget && o.append("onWidget", String(n.onWidget)), n.isReport && o.append("isReport", String(n.isReport)), n.asyncSave && o.append("asyncSave", String(n.asyncSave));
				const s = window.urlParams;
				s && s.locale && o.append("language", s.locale);
				const a = e.activeChartWidget.value(),
					l = a.widgetCustomer();
				void 0 !== l && o.append("customer", l);
				let d = a.properties().childs().timezone.value();
				"exchange" === d && (d = (null === (r = a.model().mainSeries().symbolInfo()) || void 0 === r ? void 0 : r.timezone) || d), o.append("timezone", d), o.append("symbol", a.model().mainSeries().symbol());
				const u = await e.clientSnapshot({
						showHeaderMainSymbol: n.showHeaderMainSymbol
					}),
					h = await new Promise((e => u.toBlob(e)));
				null !== h && o.append("preparedImage", h), c(o, t, i, n)
			}
			async function c(e, t, a, l = {}) {
				const c = r.enabled("charting_library_base") ? l.snapshotUrl || "https://www.tradingview.com/snapshot/" : "/snapshot/";
				try {
					const r = await (0, s.fetch)(c, {
							body: e,
							method: "POST",
							credentials: "same-origin"
						}),
						d = await r.text();
					if (r.ok) t(d);
					else {
						if ("suspicious_chart_snapshots_error" === d) {
							const e = (0, n.t)("Snapshot seems to contain prohibited content. Please contact {start_link}our support team{end_link} if you have received this by mistake.").format({
								start_link: '<a class="tv-dialog__link js-send-report-link" href="#" data-issue-type="other">',
								end_link: "</a>"
							});
							l.onInvalidSnapshotImage && l.onInvalidSnapshotImage();
							return (0, o.createErrorDialog)({
								title: (0, n.t)("Your snapshot was flagged as suspicious"),
								content: e,
								btnType: "danger"
							}).then((e => {
								e.on("afterOpen", (() => {
									i.e(1484).then(i.bind(i, 780567)).then((({
										bugDialogCreationHandler: t
									}) => {
										t(), e.$el.find(".js-send-report-link").click((() => {
											e.close()
										}))
									}))
								})), e.open()
							}))
						}
						a()
					}
				} catch (e) {
					a()
				}
			}
		},
		41872: (e, t, i) => {
			"use strict";
			i.d(t, {
				settingsKeys: () => n
			});
			const n = {
				ACTIVE_BROKER: "trading.active_broker",
				PROPERTIES: "trading.chart.proterty",
				PROFIT_VIEW_TYPE: "trading.dom.profitViewType",
				ORDER_WIDGET_MODE: "trading.orderWidgetMode.",
				DOM_DURATION: "trading.domDuration.",
				TRADING_PANEL_OPENED: "trading.tradingPanelOpened",
				TRADING_PANEL_ACTIVE_PAGE: "trading.tradingPanelActivePage",
				PANEL_WIDTH: "trading.panelWidth",
				PANEL_HEIGHT: "trading.panelHeight",
				ORDER_PANEL_SETTINGS: "trading.orderPanelSettings",
				FAVORITE_BROKERS: "trading.panelFavorite",
				SHOW_TOOLTIP_FOR_SELECT_BROKER: "trading.showTooltipForSelectBroker",
				LOGIN_COUNTER: "trading.brokerLogInCounter",
				LOGOUT_COUNTER: "trading.brokerLogOutCounter",
				DISABLED_CONFIRMATIONS: "trading.disabledConfirmations",
				MOVE_TRADED_SOURCE_WITH_SHIFT: "trading.chart.moveWithShift"
			}
		},
		782991: (e, t, i) => {
			"use strict";
			i.d(t, {
				PinePerm: () => l
			});
			i(823127);
			var n = i(86674),
				r = i(823127);
			const o = "user__username";

			function s(e) {
				const t = new FormData;
				return t.append("pine_id", e.pine_id), t.append("username_recip", e.username_recip), e.expiration && t.append("expiration", e.expiration), t
			}
			class a extends Error {
				constructor(e, t, i) {
					super(e), this.title = i, this.code = t
				}
			}
			var l;
			! function(e) {
				let t;
				! function(e) {
					e.UserDoesNotHavePermission = "user_does_not_have_permission", e.UserIsBanned = "user_is_banned", e.Exists = "exists"
				}(t = e.StatusCode || (e.StatusCode = {})), e.add = function(e) {
					return window.is_authenticated ? (0, n.fetch)("/pine_perm/add/", {
						body: s(e),
						credentials: "include",
						method: "POST"
					}).then((e => e.json().then((t => {
						const i = t.status;
						if ("exists" === i) throw new a(i, i);
						if (!e.ok) throw new a(t.detail, t.code, t.title)
					})))) : Promise.reject()
				}, e.remove = function(e, t) {
					return window.is_authenticated ? r.ajax({
						data: {
							pine_id: t,
							username_recip: e
						},
						dataType: "json",
						type: "POST",
						url: "/pine_perm/remove/"
					}) : r.Deferred().reject()
				}, e.listUsers = function(e) {
					const {
						pineId: t,
						next: i,
						prev: n,
						username: s,
						orderBy: a = o,
						limit: l = 10
					} = e;
					return !window.is_authenticated || n && !i ? r.Deferred().reject() : r.ajax({
						data: {
							pine_id: t,
							username: s
						},
						dataType: "json",
						type: "POST",
						url: i || n ? `${i}` : `/pine_perm/list_users/?limit=${l}&order_by=${a}`
					})
				}, e.listScripts = function() {
					return window.is_authenticated ? r.ajax({
						dataType: "json",
						type: "POST",
						url: "/pine_perm/list_scripts/"
					}) : r.Deferred().reject()
				}, e.modifyUserExpiration = function(e) {
					return window.is_authenticated ? (0, n.fetch)("/pine_perm/modify_user_expiration/", {
						body: s(e),
						credentials: "include",
						method: "POST"
					}).then((e => {
						if (!e.ok) return e.json().then((e => {
							throw Error(e.detail)
						}))
					})) : Promise.reject()
				}, e.numberOfUsersWithAccess = function(e) {
					return window.is_authenticated ? (0, n.fetch)(`/pine_perm/list_users/?pine_id=${e}`, {
						method: "GET"
					}).then((e => e.ok ? e.json() : e.json().then((e => {
						throw new a(e.detail)
					})))) : Promise.reject()
				}
			}(l || (l = {}))
		},
		434342: (e, t, i) => {
			"use strict";
			i.d(t, {
				ScriptUpdater: () => m
			});
			var n = i(588537),
				r = i(575932),
				o = i(277036),
				s = i(813652),
				a = i(624635);
			const l = {
				asObject: !0,
				onlyAtomValues: !0,
				valuesAsIsFromProperties: !0,
				skipHiddenInputs: !0,
				skipBooleanInputs: !1,
				skipTextareaInputs: !1
			};

			function c(e) {
				const t = e.metaInfo();
				return {
					inputsInfoList: t.inputs,
					inputDefaults: t.defaults.inputs,
					inputValues: e.inputs(l)
				}
			}

			function d(e, t, i, n) {
				const r = i.inputValues,
					o = i.inputDefaults,
					s = t.defaults.inputs,
					l = {};
				for (const e of t.inputs) {
					if (e.isHidden) continue;
					const t = i.inputsInfoList.find((t => t.id === e.id));
					if (void 0 === t || t.isHidden) continue;
					const n = r[t.id];
					if (void 0 === n) continue;
					if (t.type !== e.type) continue;
					if ((o && o[t.id]) === (s && s[e.id])) {
						if ((0, a.isStudyInputOptionsInfo)(e)) {
							if (!(0, a.isStudyInputOptionsInfo)(t)) continue;
							if (-1 === e.options.indexOf(n)) continue
						}
						if ("integer" === e.type || "float" === e.type || "price" === e.type || "time" === e.type) {
							if (void 0 !== e.max && n > e.max) continue;
							if (void 0 !== e.min && n < e.min) continue
						}
						l[e.id] = n
					}
				}
				return e.insertStudyWithoutCheck(t, l, n)
			}
			var u = i(140662),
				h = i(270617);
			const _ = new Map,
				g = new o.TranslatedString("update {title} script", (0, r.t)("update {title} script"));

			function p(e, t, i) {
				const n = [],
					r = t.dataSources();
				for (let t = r.length - 1; t >= 0; t--) {
					const o = r[t];
					if (!(0, u.isStudy)(o)) continue;
					const a = o.metaInfo();
					if (!a.pine) continue;
					if (a.scriptIdPart !== e) continue;
					const l = s.Version.parse(a.pine.version),
						c = !i || a.pine.version.toString() !== i.toString();
					l.minor() > 0 && c || n.push(o)
				}
				return n
			}
			class m {
				constructor(e) {
					this._chartWidgetCollection = e
				}
				onTVScriptLegacyPineProcessed(e) {
					if (!e.scriptMetaInfo) return;
					if (!e.scriptMetaInfo.scriptIdPart) return;
					const t = this._chartModels();
					for (let i = t.length - 1; i >= 0; i--) {
						const n = t[i],
							r = e.scriptMetaInfo;
						n.model().studyMetaInfoRepository().addPineMetaInfo(r)
					}
				}
				onTVScriptModified(e) {
					if (!e.scriptMetaInfo) return;
					const t = e.scriptMetaInfo.scriptIdPart;
					if (!t) return;
					const r = this._chartModels();
					for (let i = r.length - 1; i >= 0; i--) {
						const o = r[i],
							s = p(t, o, e.scriptVersionToUpdate),
							a = [];
						for (let e = 0; e < s.length; ++e) {
							const t = s[e],
								i = (0, n.ensureNotNull)(o.paneForSource(t)),
								r = i.isOverlay(t) ? null : t.priceScale();
							a.push({
								pane: i,
								priceScale: r
							})
						}
						const l = e.scriptMetaInfo;
						(0, n.assert)(!(0, h.isAbsent)(l), "Cannot update scripts, because script metaInfo is absent");
						const u = o.model().studyMetaInfoRepository().addPineMetaInfo(l);
						o.beginUndoMacro(g.format({
							title: u.shortDescription || u.description || ""
						}));
						for (let e = a.length - 1; e >= 0; e--) {
							const t = s[e],
								i = a[e];
							let r = c(t);
							const l = t.id();
							0 === Object.keys(r.inputValues).length ? _.has(l) && (r = (0, n.ensureDefined)(_.get(l))) : _.set(l, r);
							const h = {
									zorder: t.zorder(),
									paneId: i.pane.id()
								},
								g = d(o, u, r, h);
							g.setZorder(h.zorder), _.has(t.id()) && _.set(g.id(), (0, n.ensureDefined)(_.get(t.id()))), u.linkedToSeries || (o.mergeToPane(g, i.pane, !0), null !== i.priceScale ? o.moveToScale(g, i.pane, i.priceScale, null) : o.detachNoScale(g, i.pane)), o.removeSource(t, !1)
						}
						o.endUndoMacro()
					}
					const o = i.c[823313];
					o && o.exports.ScriptEditorWidget.onScriptModified(e, !!e.isSelfCall)
				}
				onTVScriptDeleted(e) {
					const t = e.scriptIdPart;
					if (!t) return;
					const n = this._chartModels();
					let r = null;
					for (let e = n.length; e-- && (r = n[e].model().studyMetaInfoRepository().findByIdSync({
							type: "pine",
							pineId: t
						}), null === r););
					null !== r && r.removeDefaults();
					const o = i.c[823313];
					o && o.exports.ScriptEditorWidget.onScriptDeleted(e, !!e.isSelfCall)
				}
				onTVScriptRenamed(e) {
					if (!e.scriptIdPart) return;
					const t = i.c[823313];
					t && t.exports.ScriptEditorWidget.onScriptRenamed(e, !!e.isSelfCall)
				}
				onScriptOpen() {
					null !== this._chartWidgetCollection && this._chartWidgetCollection.getAll().forEach((e => {
						const t = e.paneWidgets();
						for (let e = t.length; e--;) {
							const i = t[e].statusWidget();
							null !== i && i.updateLayout()
						}
					}))
				}
				_chartModels() {
					return null === this._chartWidgetCollection ? [] : this._chartWidgetCollection.getAll().map((e => e.model()))
				}
			}
		},
		721386: (e, t, i) => {
			"use strict";
			i.r(t), i.d(t, {
				generateColor: () => r,
				alphaToTransparency: () => o,
				transparencyToAlpha: () => s,
				applyTransparency: () => a,
				resetTransparency: () => l,
				getLuminance: () => c,
				isHexColor: () => d,
				colorFromBackground: () => u,
				gradientColorAtPercent: () => h,
				isColorDark: () => _,
				rgbaFromInteger: () => g,
				rgbaToInteger: () => p,
				colorToInteger: () => m
			});
			var n = i(724377);

			function r(e, t, i) {
				if (t = t || 0, !d(e)) return i ? (0, n.rgbaToString)((0, n.rgba)((0, n.parseRgb)(e), (0, n.normalizeAlphaComponent)(s(t)))) : e;
				const [r, o, a] = (0, n.parseRgb)(e), l = (0, n.normalizeAlphaComponent)(s(t));
				return (0, n.rgbaToString)([r, o, a, l])
			}

			function o(e) {
				return 100 * (1 - e)
			}

			function s(e) {
				if (e < 0 || e > 100) throw new Error("invalid transparency");
				return 1 - e / 100
			}

			function a(e, t) {
				if ("transparent" === e) return e;
				const i = (0, n.parseRgba)(e),
					r = i[3];
				return (0, n.rgbaToString)((0, n.rgba)(i[0], i[1], i[2], s(t) * r))
			}

			function l(e) {
				return "transparent" === e || d(e) ? e : (0, n.rgbaToString)((0, n.rgba)((0, n.parseRgb)(e), (0, n.normalizeAlphaComponent)(1)))
			}

			function c(e) {
				const t = (0, n.parseRgb)(e).map((e => (e /= 255) <= .03928 ? e / 12.92 : Math.pow((e + .055) / 1.055, 2.4)));
				return Number((.2126 * t[0] + .7152 * t[1] + .0722 * t[2]).toFixed(3))
			}

			function d(e) {
				return 0 === e.indexOf("#")
			}

			function u(e) {
				return "black" === (0, n.rgbToBlackWhiteString)((0, n.parseRgb)(e), 150) ? "#ffffff" : "#000000"
			}

			function h(e, t, i) {
				const [r, o, s, a] = (0, n.parseRgba)(e), [l, c, d, u] = (0, n.parseRgba)(t), h = (0, n.rgba)(Math.round(r + i * (l - r)), Math.round(o + i * (c - o)), Math.round(s + i * (d - s)), a + i * (u - a));
				return (0, n.rgbaToString)(h)
			}

			function _(e) {
				return c(l(e)) < .5
			}

			function g(e) {
				const t = (e = Math.round(e)) % 256;
				e -= t;
				const i = (e /= 256) % 256;
				e -= i;
				const n = (e /= 256) % 256;
				e -= n;
				return `rgba(${t},${i},${n},${(e/=256)/255})`
			}

			function p(e) {
				const t = Math.round(255 * e[3]);
				return e[0] + 256 * e[1] + 65536 * e[2] + 16777216 * t
			}

			function m(e) {
				const t = (0, n.tryParseRgba)(e);
				return null === t ? 0 : p(t)
			}
		},
		201642: (e, t, i) => {
			"use strict";
			i.d(t, {
				SubscriptionEventType: () => c,
				subscriptionNotification: () => u
			});
			var n = i(575932),
				r = i(226722),
				o = i(97639),
				s = i.n(o);
			const a = (0, i(911905).getLogger)("SubscriptionNotification"),
				l = "subscriptionPermissionHasChanged";
			var c;
			! function(e) {
				e.Subscribe = "subscribe", e.Unsubscribe = "unsubscribe", e.Downgrade = "downgrade", e.Upgrade = "upgrade", e.Change = "change"
			}(c || (c = {}));
			class d {
				constructor() {
					this.stateChanged = new(s())
				}
				on(e, t) {
					r.TVXWindowEvents.on(l, (i => {
						let n = null;
						try {
							n = JSON.parse(i)
						} catch (e) {
							return void a.logWarn(`Failed to parse JSON: ${i}`)
						}
						e !== c.Change && e !== n.type || t(n)
					})), this.stateChanged.subscribe(null, (i => {
						e !== c.Change && e !== i.type || t(i)
					}))
				}
				showNotification() {
					Promise.all([i.e(90519), i.e(90926), i.e(8834), i.e(30063), i.e(99740), i.e(77301), i.e(75966), i.e(31402), i.e(75514), i.e(24377), i.e(92697), i.e(38578), i.e(84268), i.e(89137), i.e(30870)]).then(i.bind(i, 163592)).then((({
						showSubscriptionHasBeenChangedDialog: e
					}) => {
						e({
							pushReload: !0
						})
					}))
				}
				showChartNotification() {
					Promise.all([i.e(90519), i.e(90926), i.e(8834), i.e(30063), i.e(99740), i.e(77301), i.e(75966), i.e(31402), i.e(75514), i.e(24377), i.e(92697), i.e(38578), i.e(84268), i.e(89137), i.e(30870)]).then(i.bind(i, 163592)).then((({
						showSubscriptionHasBeenChangedDialog: e
					}) => {
						e({
							content: n.t("You've upgraded your subscription. Please reload the chart to fire up the new changes.")
						})
					}))
				}
				showBillingTimeoutNotification() {
					Promise.all([i.e(90519), i.e(90926), i.e(8834), i.e(30063), i.e(99740), i.e(77301), i.e(75966), i.e(31402), i.e(75514), i.e(24377), i.e(92697), i.e(38578), i.e(84268), i.e(89137), i.e(30870)]).then(i.bind(i, 163592)).then((({
						showSubscriptionHasBeenChangedDialog: e
					}) => {
						e({
							title: n.t("Subscription details are no longer valid"),
							content: n.t("You were inactive for a long period of time. Please refresh the page to see your subscription status."),
							pushReload: !0
						})
					}))
				}
				xWindowEventsEmit(e) {
					r.TVXWindowEvents.emit(l, JSON.stringify(e))
				}
				currentTabEmit(e) {
					this.stateChanged.fire(e)
				}
				emit(e) {
					this.currentTabEmit(e), this.xWindowEventsEmit(e)
				}
				static getInstance() {
					return d._instance || (d._instance = new d), d._instance
				}
			}

			function u() {
				return d.getInstance()
			}
		},
		355263: (e, t, i) => {
			"use strict";
			i.d(t, {
				isCurrencySymbol: () => r
			});
			var n = i(519073);

			function r(e, t) {
				return "forex" === e || (0, n.hasCryptoTypespec)(e, null != t ? t : [])
			}
		},
		343719: (e, t, i) => {
			"use strict";
			i.d(t, {
				defaultCompareSymbols: () => n
			});
			const n = [{
				symbol: "SPX",
				title: "S&P 500"
			}, {
				symbol: "NDX",
				title: "US 100"
			}, {
				symbol: "DJI",
				title: "Dow 30"
			}, {
				symbol: "NI225",
				title: "Nikkei 225"
			}, {
				symbol: "DAX",
				title: "DAX"
			}, {
				symbol: "UKX",
				title: "FTSE 100"
			}]
		},
		155790: (e, t, i) => {
			"use strict";

			function n() {
				return Promise.all([i.e(74784), i.e(45702)]).then(i.bind(i, 328664))
			}

			function r(e) {
				n().then((t => t.showDisconnectedMessage(e)))
			}

			function o(e) {
				n().then((t => t.showCriticalErrorMessage(e)))
			}
			i.r(t), i.d(t, {
				showDisconnectedMessage: () => r,
				showCriticalErrorMessage: () => o
			})
		},
		477393: (e, t, i) => {
			"use strict";
			i.d(t, {
				FundamentalsDialogLoader: () => o
			});
			var n = i(262325),
				r = i.n(n);
			class o {
				constructor(e) {
					this._visibility = new(r())(!1), this._dialogPromise = null, this._dialog = null, this._chartWidgetCollection = e
				}
				visible() {
					return this._visibility.readonly()
				}
				show(e, t) {
					return null === this._dialog ? this._requestDialog().then((() => this.show(e, t))) : (this._dialog.show(e, t), Promise.resolve())
				}
				hide() {
					null !== this._dialog && this._dialog.hide()
				}
				getDialog() {
					return this._dialog
				}
				_requestDialog() {
					if (null === this._dialogPromise) {
						const e = Promise.all([i.e(10146), i.e(90519), i.e(8348), i.e(90926), i.e(37135), i.e(8834), i.e(30063), i.e(99740), i.e(21834), i.e(95468), i.e(80580), i.e(68074), i.e(52498), i.e(37619), i.e(12580), i.e(5799), i.e(52019), i.e(18867), i.e(61153), i.e(50991), i.e(11812), i.e(73327), i.e(81532), i.e(29462), i.e(91488), i.e(91879), i.e(20501), i.e(95619), i.e(86131), i.e(68896), i.e(3536), i.e(75514), i.e(69397), i.e(42669), i.e(6456)]).then(i.bind(i, 122080)).then((e => new e.FinancialsContainer(this._chartWidgetCollection)));
						this._dialogPromise = e.then((e => {
							this._dialog = e, this._dialog.visible().subscribe((e => {
								this._visibility.setValue(e)
							})), this._dialog.show()
						}))
					}
					return this._dialogPromise
				}
			}
		},
		780028: (e, t, i) => {
			"use strict";
			i.d(t, {
				StudyMarket: () => s
			});
			var n = i(647013),
				r = i(262325),
				o = i.n(r);
			class s {
				constructor(e, t) {
					this._visibility = new(o())(!1), this._dialogPromise = null, this._dialog = null, this._chartWidgetCollection = e, this._options = t, this._indicatorsPreloader = new n.IndicatorsPreloader(e)
				}
				visible() {
					return this._visibility.readonly()
				}
				show(e, t) {
					var i;
					const n = this._indicatorsPreloader.getIndicatorPromises();
					null === this._dialog && this._requestDialog(e, t), null === (i = this._dialog) || void 0 === i || i.open(e, n, t)
				}
				hide() {
					var e;
					null === (e = this._dialog) || void 0 === e || e.hide()
				}
				resetAllPages() {
					var e;
					null === (e = this._dialog) || void 0 === e || e.resetAllStudies()
				}
				_requestDialog(e, t) {
					var n;
					if (null === this._dialogPromise) {
						let r;
						r = (null === (n = this._options) || void 0 === n ? void 0 : n.onWidget) ? Promise.all([i.e(10146), i.e(90519), i.e(8348), i.e(90926), i.e(37135), i.e(8834), i.e(30063), i.e(99740), i.e(21834), i.e(95468), i.e(80580), i.e(68074), i.e(52498), i.e(37619), i.e(12580), i.e(5799), i.e(52019), i.e(18867), i.e(61153), i.e(50991), i.e(11812), i.e(73327), i.e(81532), i.e(29462), i.e(91488), i.e(91879), i.e(20501), i.e(95619), i.e(86131), i.e(68896), i.e(3536), i.e(75514), i.e(69397), i.e(42669), i.e(6456)]).then(i.bind(i, 210794)).then((e => new e.IndicatorsLibraryContainer(this._chartWidgetCollection, this._options))) : Promise.all([i.e(10146), i.e(90519), i.e(8348), i.e(90926), i.e(37135), i.e(8834), i.e(30063), i.e(99740), i.e(21834), i.e(95468), i.e(80580), i.e(68074), i.e(52498), i.e(37619), i.e(12580), i.e(5799), i.e(52019), i.e(18867), i.e(61153), i.e(50991), i.e(11812), i.e(73327), i.e(81532), i.e(29462), i.e(91488), i.e(91879), i.e(20501), i.e(95619), i.e(86131), i.e(68896), i.e(3536), i.e(75514), i.e(69397), i.e(42669), i.e(6456)]).then(i.bind(i, 250509)).then((e => new e.IndicatorsContainer(this._chartWidgetCollection))), this._dialogPromise = r.then((i => {
							this._dialog = i, this._dialog.visible().subscribe((e => {
								this._visibility.setValue(e)
							})), this._dialog.open(e, void 0, t)
						}))
					}
					return this._dialogPromise
				}
			}
		},
		553275: (e, t, i) => {
			"use strict";
			i.d(t, {
				getSymbolPagePath: () => a,
				makeSymbolChartUrl: () => p,
				makeSymbolFinancialsPageUrl: () => m,
				makeSymbolPageUrl: () => g,
				makeSymbolTimelinePageUrl: () => v,
				makeTemplateSymbolUrl: () => h
			});
			var n = i(102901);
			var r = i(179380),
				o = i(355263),
				s = i(889267);

			function a(e, t) {
				if ("spread" === e.type || "expression" === e.type) {
					const t = e.shortName && l(e.shortName),
						i = e.proName && l(e.proName);
					e = {
						...e,
						type: void 0,
						shortName: t,
						proName: i
					}
				}
				return d(u(e, t), c(e))
			}

			function l(e) {
				var t;
				return null === (t = (0, s.tokenize)(e).find((e => "symbol" === e.type))) || void 0 === t ? void 0 : t.value
			}

			function c(e) {
				const t = {
					shortName: e.shortName,
					exchange: e.exchange,
					proName: e.proName,
					type: e.type
				};
				return e.proName && e.proName.includes(":") && ([t.exchange, t.shortName] = e.proName.split(":")), t
			}

			function d(e, t) {
				const i = encodeURIComponent(t.shortName || ""),
					n = encodeURIComponent(t.exchange || ""),
					r = encodeURIComponent(t.proName || "");
				return e.replace("{tvexchange}", n).replace("{tvsymbol}", i).replace("{tvprosymbol}", r)
			}

			function u(e, t = "") {
				const i = ["UKOIL", "USOIL", "XAGAUD", "XAGCAD", "XAGCHF", "XAGEUR", "XAGGBP", "XAGHKD", "XAGJPY", "XAGUSD", "XAUAUD", "XAUCAD", "XAUCHF", "XAUEUR", "XAUGBP", "XAUHKD", "XAUJPY", "XAUNZD", "XAUUSD", "XPDUSD", "XPTUSD", "SPX"];
				return void 0 === e.shortName && void 0 === e.proName ? (console.warn("Params missed"), "/") : f(e) ? e.exchange ? "/symbols/{tvsymbol}/?exchange={tvexchange}" : `/symbols/{tvsymbol}/${t}` : e.exchange || e.proName ? e.shortName && i.includes(e.shortName) ? `/symbols/{tvsymbol}/${t}` : `/symbols/{tvexchange}-{tvsymbol}/${t}` : `/symbols/{tvsymbol}/${t}`
			}

			function h(e, t) {
				let i = e;
				if (!/{tvsymbol}|{tvexchange}|{tvprosymbol}/.test(e)) {
					let n = "tvprosymbol";
					void 0 === t.proName && (n = "tvsymbol"), i = `${e}?tvwidgetsymbol={${n}}`
				}
				const n = d(i, c(t));
				if (!(0, r.isSafeUrl)(n)) throw new Error(`The symbol URL ${n} is not allowed.`);
				return n
			}

			function _(e, t, i, r) {
				const o = window.locale_domains ? function(e, t) {
						const i = t || window.locale || "en";
						let n = e[i] ? e[i] : e.en;
						return n = "tradingview.com" === n ? "www.tradingview.com" : n, n ? document.location.protocol + "//" + n : ""
					}(window.locale_domains, r) : window.location.origin,
					s = o + d(e, c(t));
				return i ? (0, n.addUtmToUrl)(s, i) : s
			}

			function g(e, t, i, n) {
				return _(u(e, n), e, t, i)
			}

			function p(e, t) {
				return _("/chart/?symbol={tvprosymbol}", e, t)
			}

			function m(e, t, i) {
				return g(e, t, i, "financials-overview/")
			}

			function v(e, t, i) {
				return _(function(e) {
					return e.exchange && !f(e) ? "/symbols/{tvexchange}-{tvsymbol}/history-timeline/" : "/symbols/{tvsymbol}/history-timeline/"
				}(e), e, t, i)
			}

			function f(e) {
				return !!e.type && (0, o.isCurrencySymbol)(e.type, e.typespecs)
			}
		},
		542589: (e, t, i) => {
			"use strict";
			var n, r = i(823127),
				o = (n = {}, {
					suggest: function(e, t) {
						var i = r.ajax({
							url: t || "/pubscripts-suggest-json/",
							type: "GET",
							data: {
								search: e
							},
							dataType: "json"
						});
						return i.done((function(e) {
							if (e && e.results)
								for (var t = 0; t < e.results.length; t++) n[e.results[t].scriptIdPart] = TradingView.clone(e.results[t])
						})), i
					},
					info: function(e, t = !1) {
						for (var i = r.Deferred(), o = [], s = [], a = 0; a < e.length; a++) {
							var l = e[a];
							n[l] ? o.push(TradingView.clone(n[l])) : s.length < 3e3 && s.push(l)
						}
						if (!s.length) return i.resolve(o).promise();
						var c = {
							scriptIdPart: s.join(","),
							show_hidden: t
						};
						return r.ajax({
							url: "/pubscripts-get/",
							type: "POST",
							data: c,
							dataType: "json"
						}).done((function(e) {
							for (var t in e = e || []) {
								var r = e[t];
								n[r.scriptIdPart] = TradingView.clone(r), o.push(r)
							}
							i.resolve(o)
						})).fail((function() {
							i.reject()
						})), i
					},
					invalidateCache: function(e) {
						e.forEach((function(e) {
							delete n[e]
						}))
					},
					cleanCache: function() {
						n = []
					}
				});
			e.exports = o
		},
		960173: (e, t, i) => {
			"use strict";
			i.d(t, {
				ChartSaverBase: () => c
			});
			var n = i(316230),
				r = i(911730),
				o = i(388482),
				s = i(270617),
				a = i(97639),
				l = i.n(a);
			class c {
				constructor(e) {
					this._prevChartState = null, this._chartSavedDelegate = new(l()), this._chartWidgetCollection = e
				}
				saveChartLineTools(e, t, i) {
					{
						const n = (0, o.getChartStorage)(),
							r = this._chartWidgetCollection.metaInfo.uid.value();
						return n.saveLineToolsAndGroups(r, e, t, i)
					}
				}
				_getCommonSavingInfo(e) {
					const t = this._chartWidgetCollection,
						i = this._chartWidgetCollection.chartsSymbols(),
						n = i[t.activeChartWidget.value().id()],
						r = {
							...(o = n, {
								...o,
								legs: JSON.stringify(null !== (s = o.legs) && void 0 !== s ? s : [])
							})
						};
					var o, s;
					const a = t.metaInfo;
					return a.id.value() && (r.id = a.id.value()), r.name = a.name.value() || "", r.description = a.description.value() || "", r.charts_symbols = function(e) {
						const t = {};
						for (const i of Object.keys(e)) t[i] = {
							symbol: e[i].symbol
						};
						return JSON.stringify(t)
					}(i), r.is_realtime = r.is_realtime = e ? "0" : "1", r
				}
				async _saveLineToolsToStorage() {
					{
						if (!this._chartWidgetCollection.metaInfo.uid.value()) return Promise.reject("Cannot save for new layout");
						const e = this._chartWidgetCollection.getAll().map((e => {
							var t, i;
							return null !== (i = null === (t = e.lineToolsSynchronizer()) || void 0 === t ? void 0 : t.flushPendingSavings()) && void 0 !== i ? i : null
						})).filter(s.notNull);
						e.length && await Promise.all(e)
					}
				}
				async _saveChart(e, t, i, o) {
					var s;
					const a = this._chartWidgetCollection.metaInfo;
					let l = null !== (s = o.changes) && void 0 !== s ? s : r.changedAll,
						c = !0;
					if (2 & l) try {
						await this._saveLineToolsToStorage()
					} catch (e) {
						l |= 1, c = !1
					}
					if (1 & l) {
						const r = e(c);
						if ((0, n.default)(this._prevChartState, r) && null !== a.id.value()) return this._chartSavedDelegate.fire(!0), void t(a, r);
						const s = (e, i) => (c || this._chartWidgetCollection.getAll().forEach((e => {
							var t;
							return null === (t = e.lineToolsSynchronizer()) || void 0 === t ? void 0 : t.validateAll()
						})), t(e, i));
						return this._saveChartImpl(r, a, s, i, o, e)
					}
					this._chartSavedDelegate.fire(!0), t(a, null)
				}
			}
		},
		798935: (e, t, i) => {
			"use strict";
			var n = i(97639),
				r = i(823127),
				o = i(575932).t,
				s = i(588537).assert,
				a = i(366156),
				l = i(345848).trackEvent,
				c = i(629588).createGoProDialog,
				d = i(552279).reloginOrGoPro,
				u = i(542589),
				h = i(251954),
				_ = i(125226).isFeatureEnabled,
				g = i(503595).asyncWindowOpen,
				p = i(281640),
				m = i(779923).showWarning,
				v = i(147731).backend,
				f = i(960173).ChartSaverBase;
			const b = {
				saverOnPublishError: o("The publication preview could not be loaded. Please disable your browser extensions and try again."),
				saveLibraryError: o("Failed to save library"),
				saveScriptError: o("Failed to save script")
			};

			function y(e, t) {
				e.content = JSON.stringify(t)
			}

			function S(e) {
				return e.returnValue = o("Script may be not updated if you leave the page."), e.returnValue
			}
			t.ChartSaver = class extends f {
				constructor(e) {
					super(e), this._chartAboutToBeSavedDelegate = new n, this._chartSavedDelegate = new n, this._prevChartState = null, this._chartSizeLimitExceededDelegate = new n, this._savingToken = null
				}
				chartSizeLimitExceeded() {
					return this._chartSizeLimitExceededDelegate
				}
				chartAboutToBeSaved() {
					return this._chartAboutToBeSavedDelegate
				}
				chartSaved() {
					return this._chartSavedDelegate
				}
				whenReadyToSave(e) {
					var t = this._chartWidgetCollection.activeChartWidget.value().model().mainSeries();
					if (t.hasDelayedSymbolIntervalChange()) {
						var i, n = null;
						i = function() {
							t.dataEvents().symbolError().unsubscribe(null, n, !0), e()
						}, n = function() {
							t.dataEvents().symbolResolved().unsubscribe(null, i, !0)
						}, t.dataEvents().symbolResolved().subscribe(null, i, !0), t.dataEvents().symbolError().subscribe(null, n, !0)
					} else e()
				}
				saveToJSON() {
					var e = this._getCommonSavingInfo(!1);
					return y(e, this._getChartWidgetCollectionState(!1, !0)), e
				}
				_getChartWidgetCollectionState(e, t, i, n, r) {
					return e || (t = !0, n = !1), t ? this._chartWidgetCollection.state(!!e, i, n, r) : this._chartWidgetCollection.activeChartWidget.value().state(!!e, i, n, r)
				}
				publishChart(e) {
					var t = this;
					return new Promise((function(n) {
						l("GUI", "Publish Chart");
						var o = t,
							s = {
								accessType: (e = e || {}).isPrivate || TVSettings.getBool("publishchart.private", !1) ? 0 : 1,
								publishSource: e.publishSource,
								videoFilename: e.videoFilename,
								videoDuration: e.videoDuration,
								videoCam: e.videoCam
							},
							a = r(".publish-dropdown-container"),
							c = r(".publish-chart-button"),
							d = {
								savePrivacySetting: !e.doNotSavePrivacySetting,
								onWidget: e.onWidget
							},
							u = e.onPublishUrl,
							h = e.onPublishError;
						o._ideaPublisher ? n(o._ideaPublisher.openPublication(s, d)) : Promise.all([Promise.all([i.e(10146), i.e(90519), i.e(8348), i.e(48181), i.e(37135), i.e(35354), i.e(5979), i.e(78941), i.e(91670), i.e(53221), i.e(63280), i.e(55099), i.e(84845), i.e(67161), i.e(50407), i.e(71452), i.e(34640), i.e(94430), i.e(44415), i.e(43788), i.e(52323), i.e(66836), i.e(59328), i.e(73886), i.e(5953), i.e(94202), i.e(53323), i.e(23507), i.e(94009), i.e(88425), i.e(75746), i.e(63488), i.e(75514), i.e(88655), i.e(23393), i.e(83509), i.e(42566), i.e(10324), i.e(88531), i.e(50629)]).then(i.bind(i, 777483)), Promise.all([i.e(10146), i.e(90519), i.e(8348), i.e(48181), i.e(37135), i.e(35354), i.e(5979), i.e(78941), i.e(91670), i.e(53221), i.e(63280), i.e(55099), i.e(84845), i.e(67161), i.e(50407), i.e(71452), i.e(34640), i.e(94430), i.e(44415), i.e(43788), i.e(52323), i.e(66836), i.e(59328), i.e(73886), i.e(5953), i.e(94202), i.e(53323), i.e(23507), i.e(94009), i.e(88425), i.e(75746), i.e(63488), i.e(75514), i.e(88655), i.e(23393), i.e(83509), i.e(42566), i.e(10324), i.e(88531), i.e(50629)]).then(i.bind(i, 792011)), Promise.all([i.e(10146), i.e(90519), i.e(8348), i.e(48181), i.e(37135), i.e(35354), i.e(5979), i.e(78941), i.e(91670), i.e(53221), i.e(63280), i.e(55099), i.e(84845), i.e(67161), i.e(50407), i.e(71452), i.e(34640), i.e(94430), i.e(44415), i.e(43788), i.e(52323), i.e(66836), i.e(59328), i.e(73886), i.e(5953), i.e(94202), i.e(53323), i.e(23507), i.e(94009), i.e(88425), i.e(75746), i.e(63488), i.e(75514), i.e(88655), i.e(23393), i.e(83509), i.e(42566), i.e(10324), i.e(88531), i.e(50629)]).then(i.bind(i, 773792)), Promise.all([i.e(10146), i.e(90519), i.e(8348), i.e(48181), i.e(37135), i.e(35354), i.e(5979), i.e(78941), i.e(91670), i.e(53221), i.e(63280), i.e(55099), i.e(84845), i.e(67161), i.e(50407), i.e(71452), i.e(34640), i.e(94430), i.e(44415), i.e(43788), i.e(52323), i.e(66836), i.e(59328), i.e(73886), i.e(5953), i.e(94202), i.e(53323), i.e(23507), i.e(94009), i.e(88425), i.e(75746), i.e(63488), i.e(75514), i.e(88655), i.e(23393), i.e(83509), i.e(42566), i.e(10324), i.e(88531), i.e(50629)]).then(i.bind(i, 318596))]).then((([{
							CategoriesProvider: e
						}, {
							ChartInfoProvider: t
						}, {
							IdeasProvider: i
						}, {
							IdeaPublisher: r
						}]) => {
							var l = new t({
									chartWidgetCollection: o._chartWidgetCollection
								}),
								_ = new i({
									publish: function(e, t) {
										return new Promise((function(i, n) {
											var r = {
												closeForm: function() {
													i()
												},
												showError: function(e) {
													n(e)
												},
												onPublishUrl: u,
												onPublishError: h
											};
											try {
												o.onPublish(e, Object.assign({}, t, r))
											} catch (e) {
												n(b.saverOnPublishError)
											}
										}))
									}
								}),
								g = new e;
							o._ideaPublisher = new r({
								chartInfoProvider: l,
								ideasProvider: _,
								categoriesProvider: g,
								onOpenEditor: function() {
									a.addClass("disabled")
								},
								onMinimizeEditor: function() {
									a.removeClass("disabled"), c.addClass("inprogress")
								},
								onCloseEditor: function() {
									a.removeClass("disabled"), c.removeClass("inprogress")
								}
							}), n(o._ideaPublisher.openPublication(s, d))
						}))
					}))
				}
				publishScript(e, t, i) {
					var n = this;
					if (e.accessType = TVSettings.getBool("publishscript.private", !1) ? 0 : 1, n._scriptPublisher) n._scriptPublisher.openPublication(e, t);
					else {
						var r = i.scriptPublisher,
							o = i.scriptsProvider,
							s = i.categoriesProvider,
							a = new o({
								publish: function(e) {
									return new Promise((function(t, i) {
										var r = {
											closeForm: function() {
												if (e && e.scriptPublication && e.scriptPublication.updateScriptIdPart) {
													var i = e.scriptPublication.updateScriptIdPart;
													u.invalidateCache([i]), window.studyMarket && window.studyMarket.resetAllPages()
												}
												t()
											},
											showError: function(e) {
												i(e)
											},
											savePrivacySetting: !0
										};
										try {
											n.onPublish(e, r)
										} catch (e) {
											i(b.saverOnPublishError)
										}
									}))
								}
							});
						n._scriptPublisher = new r({
							scriptsProvider: a,
							categoriesProvider: new s,
							scriptType: e.scriptType,
							scriptTitle: e.title,
							existingLibraryInfo: e.existingLibraryInfo
						}), n._scriptPublisher.openPublication(e, t)
					}
				}
				onPublish(e, t) {
					{
						var i = this;
						if (i.publishInProgress) return;
						var n = t && t.publishAllLayout,
							s = i._getCommonSavingInfo(!0),
							c = !1;
						e.scriptPublication && (e.scriptPublication.scriptProtection === p.Access.ACCESS_CLOSED_NEEDS_AUTH && (c = !0), s.scriptProtection = parseInt(p.Access.MAP_NAME_TO_ID[e.scriptPublication.scriptProtection])), y(s, this._getChartWidgetCollectionState(!0, n, !0, c)), s.image = JSON.stringify(this._chartWidgetCollection.images({
							onlyActiveChart: !n
						}));
						const v = n => {
							window.removeEventListener("beforeunload", S), i.publishInProgress = !1;
							var r = n.responseText || "";
							if ("ok:" === r.substring(0, 3)) {
								var s = !1;
								if (t.savePrivacySetting) {
									s = !e.is_public;
									TVSettings.setValue(e.scriptPublication ? "publishscript.private" : "publishchart.private", s)
								}
								var a = r.substring(3),
									l = JSON.parse(a);
								i._chartWidgetCollection.metaInfo.id.value() || i._chartWidgetCollection.metaInfo.id.setValue(l.id), t.closeForm && t.closeForm(), t.onPublishUrl && t.onPublishUrl(l.publishUrl, l.uuid), h.emit("onPublishUrl", l.uuid), i._lastPublishUrl = l.publishUrl, i.setPopupUrl && i.setPopupUrl(l.publishUrl)
							} else {
								(413 === n.status || /^[\d\s]*request.+large/i.test(r.trim())) && (r = o("This Chart Layout has a lot of objects and can't be published. Please remove the unused objects (drawings/indicators) through the Object Tree to continue publishing."));
								var c = r || o("Error occurred while publishing");
								t.showError && t.showError(c, {
									html: !0
								}), t.onPublishError && t.onPublishError(c), i.setPopupUrl && i.setPopupUrl(void 0)
							}
						};
						var d = e.scriptPublication,
							u = !(!d || !d.updateScriptIdPart),
							_ = new Promise((function(e, t) {
								var i;
								d ? (u ? (window.addEventListener("beforeunload", S),
									i = a.publishNext(d.scriptSource, d.updateScriptIdPart)) : i = a.publishNew(d.scriptSource, d.scriptProtection), i.done((function(t) {
									e(t.publishedstudyscript_id)
								})).fail((function(e) {
									let i = "";
									i = -1 !== e.indexOf("already published library") ? b.saveLibraryError : b.saveScriptError, m({
										title: i,
										text: e
									}), t()
								}))) : e()
							}));
						u ? _.then((function(t) {
							var i = {
								publishedstudyscript_id: t,
								script_terms: e.script_terms,
								description: e.description,
								tags: e.tags,
								preserve_old_chart: e.preserveOldChart
							};
							r.ajax({
								url: "/script-update/",
								type: "post",
								dataType: "text",
								data: r.extend({}, s, i),
								complete: v
							})
						}), v) : _.then((function(t) {
							t && (e.publishedstudyscript_id = t);
							for (var i = e.tags.split(","), n = e.scriptPublication ? "Script" : "Idea", o = 0; o < i.length; o++) l(n + " Publication", n + " Tag", i[o]);
							if (e.scriptPublication) {
								var a = e.scriptPublication.scriptProtection;
								l("Script Publication", "Script Visibility", {
									open_no_auth: "Open",
									closed_no_auth: "Protected",
									closed_needs_auth: "Invite Only"
								} [a])
							} else {
								var c = e.is_education ? "Education" : "Analysis",
									d = e.is_public ? "Public" : "Private";
								l("Idea Publication", "Idea Type", c), l("Idea Publication", "Idea Strategy", ["Neutral", "Long", "Short"][e.direction]), l("Idea Publication", "Idea Privacy", d)
							}
							r.ajax({
								url: "/publishchart/",
								type: "post",
								dataType: "text",
								data: r.extend({}, s, e),
								complete: v
							})
						}), v), i.publishInProgress = !0, t.onWidget || "" !== e.name && "" !== e.description && e.description.length <= 7e4 && e.name.length <= 64 && g(new Promise((function(e) {
							i.setPopupUrl = e
						})))
					}
				}
				_saveChartImpl(e, t, i, n, o, s) {
					var a = i,
						l = n;
					if (this._savingToken = String(Math.random()), e.savingToken = this._savingToken, a = function(s) {
							if (this._savingToken = null, "ok:" === s.substring(0, 3)) {
								var a = s.substring(3),
									l = JSON.parse(a);
								t.id.value() || (t.id.setValue(l.id), t.uid.setValue(l.uid)), t.lastModified.setValue(l.lastModified), "function" == typeof i && i(t, e)
							} else if ("saved_chart_limit_reached" === s || "" === s) {
								if ("function" == typeof n && n(), o.noDefaultOnFail) return;
								c({
									feature: "savedChartsLimit"
								})
							} else "function" == typeof n && n(), r("#error").html(s);
							r(window).off("beforeunload.savechart")
						}, l = async function(e) {
							if (this._savingToken = null, e && 413 === e.status) return this._chartSizeLimitExceededDelegate.fire(), void("function" == typeof n && n.apply(null, arguments));
							if (e && 403 === e.status) {
								try {
									"login_required" === (await e.json()).code && d({
										feature: "savedChartsLimit"
									})
								} catch (e) {}
								"function" == typeof n && n.apply(null, arguments)
							} else o.retry ? "function" == typeof n && n.apply(null, arguments) : (o.retry = !0, this._saveChart(s, i, n, o))
						}, !e.name) return console.warn("Saving chart with empty name is not allowed"), void n();
					v.saveChart(e.name, e.short_name, e.resolution, e, t).then(a.bind(this)).catch(l.bind(this))
				}
				saveChartSilently(e, t, i) {
					i = i || {};
					var n = function(e) {
						var t = e && _("remove_line_tools_from_content"),
							n = this._getChartWidgetCollectionState(!1, void 0, void 0, void 0, t),
							r = this._getCommonSavingInfo(!1, t);
						return y(r, n), i.chartName && (r.name = i.chartName), r.name && 0 !== r.name.length || !i.defaultChartName || (r.name = i.defaultChartName), i.autoSave && (r.autoSave = !0), r
					}.bind(this);
					r(window).on("beforeunload.savechart", (function() {
						return o("Your chart is being saved, please wait a moment before you leave this page.")
					})), this._isSaveInProcess = !0, this._chartAboutToBeSavedDelegate.fire(), this._saveChart(n, function(t, i) {
						s(!this._chartWidgetCollection.readOnly(), "Trying to save layout in read-only mode"), i && this._chartWidgetCollection.metaInfo.name.setValue(i.name), this._prevChartState = i, this._chartSavedDelegate.fire(!0), this._isSaveInProcess = !1, e && e({
							uid: t.uid.value(),
							data: i
						}), this._prevChartState && delete this._prevChartState.savingToken
					}.bind(this), function() {
						this._chartSavedDelegate.fire(!1), this._isSaveInProcess = !1, t && t.apply(null, arguments)
					}.bind(this), i), r(window).off("beforeunload.savechart")
				}
				isSaveInProcess() {
					return this._isSaveInProcess
				}
			}
		},
		659192: (e, t, i) => {
			"use strict";
			i.d(t, {
				timeFrames: () => r
			});
			var n = i(575932);
			const r = {
				"1d": {
					text: (0, n.t)("1D"),
					value: {
						value: "1D",
						type: "period-back"
					},
					targetResolution: "1",
					description: (0, n.t)("%d day", {
						plural: "%d days",
						count: 1
					}).replace("%d", "1")
				},
				"5d": {
					text: (0, n.t)("5D"),
					value: {
						value: "5D",
						type: "period-back"
					},
					targetResolution: "5",
					description: (0, n.t)("%d day", {
						plural: "%d days",
						count: 5
					}).replace("%d", "5")
				},
				"1w": {
					text: (0, n.t)("1W"),
					value: {
						value: "1W",
						type: "period-back"
					},
					targetResolution: "10",
					description: (0, n.t)("Week", {
						plural: "%d weeks",
						count: 1
					}).replace("%d", "1")
				},
				"1m": {
					text: (0, n.t)("1M"),
					value: {
						value: "1M",
						type: "period-back"
					},
					targetResolution: "30",
					description: (0, n.t)("%d month", {
						plural: "%d months",
						count: 1
					}).replace("%d", "1")
				},
				"3m": {
					text: (0, n.t)("3M"),
					value: {
						value: "3M",
						type: "period-back"
					},
					targetResolution: "60",
					description: (0, n.t)("%d month", {
						plural: "%d months",
						count: 3
					}).replace("%d", "3")
				},
				"6m": {
					text: (0, n.t)("6M"),
					value: {
						value: "6M",
						type: "period-back"
					},
					targetResolution: "120",
					description: (0, n.t)("%d month", {
						plural: "%d months",
						count: 6
					}).replace("%d", "6")
				},
				ytd: {
					text: (0, n.t)("YTD"),
					value: {
						value: "YTD",
						type: "period-back"
					},
					targetResolution: "1D"
				},
				"12m": {
					text: (0, n.t)("1Y"),
					value: {
						value: "12M",
						type: "period-back"
					},
					targetResolution: "1D",
					description: (0, n.t)("%d year", {
						plural: "%d years",
						count: 1
					}).replace("%d", "1")
				},
				"60m": {
					text: (0, n.t)("5Y"),
					value: {
						value: "60M",
						type: "period-back"
					},
					targetResolution: "1W",
					description: (0, n.t)("%d year", {
						plural: "%d years",
						count: 5
					}).replace("%d", "5")
				},
				all: {
					text: (0, n.t)("All"),
					value: {
						value: "ALL",
						type: "period-back"
					},
					targetResolution: "1M"
				}
			}
		},
		184601: (e, t, i) => {
			"use strict";
			i.r(t), i.d(t, {
				htmlEscape: () => o,
				removeTags: () => s,
				removeSpaces: () => a,
				capitalizeFirstLetterInWord: () => l
			});
			const n = /[<"'&>]/g,
				r = e => `&#${e.charCodeAt(0)};`;

			function o(e) {
				return e.replace(n, r)
			}

			function s(e = "") {
				return e.replace(/(<([^>]+)>)/gi, "")
			}

			function a(e = "") {
				return e.replace(/\s+/g, "")
			}

			function l(e = "") {
				return e.replace(/\b\w/g, (e => e.toUpperCase()))
			}
		},
		102901: (e, t, i) => {
			"use strict";
			i.d(t, {
				addUtmToUrl: () => r
			});
			var n = i(114939);

			function r(e, t) {
				if (!/([a-zA-Z0-9.-]*tradingview.com)|localhost/.test(e)) return e;
				const i = (0, n.buildUtmQueryString)(t);
				if ("" === i) return e;
				const r = e.indexOf("?"),
					o = e.indexOf("#"),
					s = -1 !== o;
				if (-1 !== r && (!s || r < o)) {
					return `${e.slice(0,r)}?${s?e.slice(r+1,o):e.slice(r+1)}&${i}${s?e.slice(o):""}`
				}
				if (s) {
					return `${e.slice(0,o)}?${i}${e.slice(o)}`
				}
				return `${e}?${i}`
			}
		},
		114939: (e, t, i) => {
			"use strict";
			i.d(t, {
				filterUtmInfo: () => s,
				buildUtmQueryString: () => a,
				buildUtmQueryStringFromUrlParams: () => l
			});
			var n = i(514998),
				r = i(184601);
			const o = ["utm_source", "utm_medium", "utm_campaign"];

			function s(e) {
				const t = {};
				return o.forEach((i => {
					const n = e[i];
					"string" == typeof n && "" !== n && (t[i] = (0, r.htmlEscape)(n))
				})), t
			}

			function a(e, t = !1) {
				const i = (0, n.createUrlParams)(e);
				return i && t ? "?" + i : i
			}

			function l(e) {
				return a(s((0, n.getUrlParams)()), e)
			}
		},
		503595: (e, t, i) => {
			"use strict";
			i.d(t, {
				asyncWindowOpen: () => o
			});
			var n = i(314802);
			const r = i(575932).t("Loading...");

			function o(e, t, i) {
				return window.TVD || (0, n.isOnMobileAppPage)("any") ? function(e, t, i) {
					return e.then((e => {
						void 0 !== e && open(e, t, i)
					}), (() => {}))
				}(e, t, i) : async function(e, t, i) {
					const n = URL.createObjectURL(new Blob([`<!doctype html><html style="background-color:${getComputedStyle(document.documentElement).backgroundColor}"><head><meta charset="utf-8"><title>${r}</title></head><body style="background-color:${getComputedStyle(document.body).backgroundColor}"></body></html>`], {
						type: "text/html"
					}));
					try {
						const r = open(n, t, i);
						if (!r) throw new Error("cound not open a new tab");
						const o = await e.catch((() => {}));
						void 0 !== o ? r.location.replace(o) : r.close()
					} finally {
						URL.revokeObjectURL(n)
					}
				}(e, t, i)
			}
		},
		510013: (e, t, i) => {
			"use strict";
			i.d(t, {
				ChunkLoader: () => r
			});
			var n = i(761068);
			class r {
				constructor() {
					this._retries = 5, this._cache = null, this._tryLoad = (e, t) => {
						this._retries = this._retries - 1;
						this._startLoading(e).then(t, 0 !== this._retries ? i => {
							(0, n.isAbortError)(i) || setTimeout((() => this._tryLoad(e, t)), 3e3)
						} : void 0)
					}
				}
				load(e) {
					return this._cache || (this._cache = new Promise(this._tryLoad.bind(this, null != e ? e : null))), this._cache
				}
			}
		},
		519073: (e, t, i) => {
			"use strict";

			function n(e, t) {
				return t.includes("crypto") || ["bitcoin", "crypto"].includes(e)
			}
			i.d(t, {
				hasCryptoTypespec: () => n
			})
		},
		975774: (e, t, i) => {
			"use strict";
			i.d(t, {
				loadThemeOnChartInitialization: () => o
			});
			var n = i(440135),
				r = i(919346);

			function o(e) {
				const t = (0, n.getCurrentTheme)().name,
					i = (0, r.getThemeNameIfStdTheme)((0, n.extractThemeFromModel)(e.activeChartWidget.value().model()));
				null !== i && i !== t && (0, n.loadTheme)(e, {
					themeName: t,
					standardTheme: !0,
					noUndo: !0
				})
			}
		},
		61499: (e, t, i) => {
			"use strict";
			var n;
			i.d(t, {
					StdTheme: () => n
				}),
				function(e) {
					e.Light = "light", e.Dark = "dark"
				}(n || (n = {}))
		},
		909740: (e, t, i) => {
			"use strict";
			i.r(t), i.d(t, {
				setTheme: () => o,
				watchedTheme: () => r
			});
			var n = i(262325);
			const r = new(i.n(n)());

			function o(e) {
				r.setValue(e)
			}
			r.subscribe((e => {
				! function(e, t = window) {
					const i = "theme-" + e,
						n = t.document.documentElement.classList;
					for (const e of Array.from(n)) e.startsWith("theme-") && e !== i && n.remove(e);
					n.add(i)
				}(e, window)
			}))
		},
		966526: (e, t, i) => {
			"use strict";
			i.d(t, {
				getFinancialsViewItems: () => _,
				prepareElementsForContent: () => a,
				tabsToFlatList: () => l
			});
			var n = i(575932),
				r = i(366156),
				o = i(304328),
				s = i(588537);

			function a(e, t) {
				const i = [];
				t && i.push({
					type: "Padding"
				});
				const n = e.map((e => ({
					type: "Item",
					item: e
				})));
				return i.push(...n), i
			}

			function l(e) {
				const t = [];
				return e.forEach((e => {
					t.push({
						type: "Title",
						title: e.title
					});
					const i = a(e.content);
					t.push(...i)
				})), t
			}

			function c(e) {
				const t = e.filter((e => void 0 === e.indicatorVisible || e.indicatorVisible));
				return t.filter((e => e.periodData.length > 0))
			}

			function d(e, t = !1) {
				const {
					id: i,
					name: r,
					shortTitle: o,
					idWithoutPeriod: s,
					periodData: a
				} = e;
				return {
					id: i,
					shortTitle: o,
					periodData: a,
					name: (0, n.t)(r, {
						context: "study"
					}),
					solutionId: h(s),
					isNested: t
				}
			}
			const u = i(864093);

			function h(e) {
				return u[e]
			}
			async function _() {
				const [e, t] = await Promise.all([(0, r.requestFundamentalScripts)(), (0, o.getFinancialsData)()]), i = function(e, t) {
					const i = {};
					e.forEach((e => {
						const t = (0, o.getIdWithoutPeriod)(e.id);
						t && !i[t] && (i[t] = {
							...e,
							nestingLevel: -1,
							idWithoutPeriod: t,
							parentIdWithoutPeriod: (0, o.getIdWithoutPeriod)(e.parent),
							periodData: [],
							shortTitle: ""
						})
					})), t.forEach((e => {
						if (!e.extra.fund_id) return;
						const t = (0, o.getIdWithoutPeriod)(e.extra.fund_id),
							n = i[(0, s.ensureDefined)(t)];
						if (!n) return;
						const r = {
							period: e.extra.financialPeriod,
							scriptIdPart: e.scriptIdPart,
							scriptName: e.scriptName,
							version: e.version
						};
						n.shortTitle = e.extra.shortDescription, n.periodData.push(r)
					}));
					const n = Object.values(i),
						r = (e, t) => e.period && t.period ? e.period.localeCompare(t.period) : 0;
					return n.forEach((e => {
						e.periodData.length > 1 && e.periodData.sort(r)
					})), n
				}((0, o.filterHiddenItems)(t), e), n = function(e) {
					const t = [...e].map((e => {
						var t;
						if (null === (t = e.children) || void 0 === t ? void 0 : t.length) {
							const t = (0, o.flattenTree)(e.children);
							return {
								...e,
								children: t
							}
						}
						return e
					}));
					return (0, o.splitByCategory)(t)
				}(function(e) {
					const t = (0, o.toTree)(e);
					return (0, o.sortByOrdinal)(t)
				}(i));
				return function(e) {
					const t = {};
					return Object.keys(e).forEach((i => {
						const n = [];
						e[i].forEach((e => {
							const t = c([e])[0];
							if (t)
								if (t.children) {
									const e = c(t.children).map((e => d(e, !0)));
									n.push(d(t), ...e)
								} else n.push(d(t))
						})), t[i] = n
					})), t
				}(n)
			}
		},
		647013: (e, t, i) => {
			"use strict";
			i.d(t, {
				IndicatorsPreloader: () => a
			});
			var n = i(366156),
				r = i(604061),
				o = i(782991),
				s = i(966526);
			class a {
				constructor(e) {
					this._chartWidgetCollection = e
				}
				getIndicatorPromises() {
					var e, t, i, a, l, c, d, u, h, _;
					const g = (null === (e = this._initIndicatorsPromises) || void 0 === e ? void 0 : e.javaStudiesPromise) || (0, r.requestBuiltInJavaStudies)(this._chartWidgetCollection),
						p = (null === (t = this._initIndicatorsPromises) || void 0 === t ? void 0 : t.standardScriptsPromise) || (0, n.requestBuiltinScripts)(),
						m = (null === (i = this._initIndicatorsPromises) || void 0 === i ? void 0 : i.candlestickScriptsPromise) || (0, n.requestCandlestickScripts)(),
						v = (null === (a = this._initIndicatorsPromises) || void 0 === a ? void 0 : a.publicPineStudiesPromise) || (0, r.fetchPublicPineStudies)((0, r.createPublicStudiesRequestParams)("top")),
						f = (null === (l = this._initIndicatorsPromises) || void 0 === l ? void 0 : l.trendingStudiesPromise) || (0, r.fetchPublicPineStudies)((0, r.createPublicStudiesRequestParams)("trending")),
						b = (null === (c = this._initIndicatorsPromises) || void 0 === c ? void 0 : c.recommendationsStudiesPromise) || (0, r.fetchRecommendationsPineStudies)(),
						y = (null === (d = this._initIndicatorsPromises) || void 0 === d ? void 0 : d.editorsPicksStudiesPromise) || (0,
							r.fetchEditorsPicksStudies)(),
						S = null === (u = this._initIndicatorsPromises) || void 0 === u ? void 0 : u.addonsPromise,
						w = (null === (h = this._initIndicatorsPromises) || void 0 === h ? void 0 : h.pinePermissionsPromise) || o.PinePerm.listScripts(),
						C = (null === (_ = this._initIndicatorsPromises) || void 0 === _ ? void 0 : _.financialsPromise) || (0, s.getFinancialsViewItems)(),
						P = (0, n.requestUserScripts)();
					return this._initIndicatorsPromises = {
						javaStudiesPromise: g,
						userScriptsPromise: P,
						standardScriptsPromise: p,
						candlestickScriptsPromise: m,
						publicPineStudiesPromise: v,
						trendingStudiesPromise: f,
						addonsPromise: S,
						pinePermissionsPromise: w,
						editorsPicksStudiesPromise: y,
						financialsPromise: C,
						recommendationsStudiesPromise: b
					}, this._initIndicatorsPromises
				}
			}
		},
		604061: (e, t, i) => {
			"use strict";
			i.d(t, {
				fetchPublicPineStudies: () => r,
				fetchRecommendationsPineStudies: () => o,
				fetchEditorsPicksStudies: () => s,
				fetchLoadMorePublicStudies: () => a,
				createPublicStudiesRequestParams: () => l,
				requestBuiltInJavaStudies: () => c
			});
			var n = i(86674);
			async function r(e) {
				return (await (0, n.fetch)(`/pubscripts-library/?${e}`)).json()
			}
			async function o() {
				return (await (0, n.fetch)("/pubscripts-library/recommendations/")).json()
			}
			async function s() {
				return (await (0, n.fetch)("/pubscripts-library/editors-picks/")).json()
			}
			async function a(e) {
				return (await (0, n.fetch)(e)).json()
			}

			function l(e) {
				const t = {
					offset: 0,
					count: 20,
					type: 0,
					sort: e
				};
				return new URLSearchParams(Object.entries(t)).toString()
			}

			function c(e) {
				return e.activeChartWidget.value().metaInfoRepository().findAllJavaStudies()
			}
		},
		40541: (e, t, i) => {
			"use strict";
			i.d(t, {
				DEFAULT_CATEGORY_SETTINGS: () => n,
				HISTORIC_VALUES_POSTFIX: () => r,
				PERIOD_POSTFIXES: () => o
			});
			const n = {
					"income statements": {
						defaultItems: ["total_revenue", "net_income"],
						additionalField: 1,
						displayGroups: !1
					},
					"balance sheet": {
						defaultItems: ["total_assets", "total_liabilities"],
						additionalField: 0,
						displayGroups: !1
					},
					"cash flow": {
						defaultItems: ["cash_f_operating_activities", "cash_f_investing_activities", "cash_f_financing_activities"],
						additionalField: 1,
						displayGroups: !1
					},
					statistics: {
						defaultItems: ["price_earnings", "price_cash_flow"],
						additionalField: 2,
						displayGroups: !0
					},
					dividends: {
						defaultItems: ["dps_common_stock_prim_issue", "dividends_yield"],
						additionalField: 0,
						displayGroups: !1
					},
					earnings: {
						defaultItems: [],
						additionalField: 0,
						displayGroups: !1
					}
				},
				r = "_h",
				o = ["_fy", "_fq", "_ttm"]
		},
		304328: (e, t, i) => {
			"use strict";
			i.d(t, {
				getFinancialsData: () => d,
				isCategoryId: () => u,
				filterConfig: () => h,
				translateConfig: () => _,
				filterHiddenItems: () => g,
				toTree: () => p,
				sortByOrdinal: () => m,
				flattenTree: () => v,
				splitByCategory: () => f,
				createSortedCategoryList: () => b,
				filterCategoryList: () => y,
				getItemValuesFromQuotes: () => S,
				prepareEarningsData: () => I,
				getPercentChange: () => E,
				getAdditionalFieldPostfix: () => A,
				getIdWithoutPeriod: () => D,
				addOrRemoveIdFromSet: () => k,
				findParentsSet: () => W,
				getAdditionalFieldValue: () => L,
				valueFormatter: () => x,
				getIndicatorPagePath: () => O
			});
			var n = i(588537),
				r = i(575932),
				o = i(86674),
				s = i(436901),
				a = i(530254),
				l = i(610203),
				c = i(40541);

			function d() {
				return (0, o.fetch)("/financial/fundamentals_config/", {
					credentials: "same-origin",
					headers: {
						"Content-Type": "application/json"
					},
					method: "GET"
				}).then((e => e.json()))
			}

			function u(e) {
				return "balance sheet" === e || "income statements" === e || "cash flow" === e || "statistics" === e
			}

			function h(e) {
				return e.filter((e => !e.hidden && e.financialVisible))
			}

			function _(e) {
				return e.map((e => {
					const {
						name: t,
						group: i,
						...n
					} = e;
					return {
						...n,
						name: (0, r.t)(t, {
							context: "study"
						}),
						group: (0, r.t)(i, {
							context: "study"
						})
					}
				}))
			}

			function g(e) {
				return e.filter((e => !e.hidden))
			}

			function p(e) {
				var t, i;
				const r = Symbol(),
					o = {},
					s = {},
					a = [];
				for (const i of e) {
					const e = (0, n.ensureDefined)(D(i.id)),
						l = e,
						c = D(i.parent),
						d = null != c ? c : r;
					d === r && a.push(l);
					const u = o[l] = {
						...i,
						nestingLevel: -1,
						idWithoutPeriod: e,
						parentIdWithoutPeriod: c,
						periodData: i.periodData || [],
						shortTitle: i.shortTitle || ""
					};
					(s[d] = null !== (t = s[d]) && void 0 !== t ? t : []).push(u)
				}
				for (const t of e) {
					const e = (0, n.ensureDefined)(D(t.id));
					o[e].children = s[e], delete s[e]
				}(0, n.assert)(0 === Object.keys(s).length);
				let l = 0;
				for (; a.length > 0 && l < e.length;) {
					l++;
					const e = o[(0, n.ensureDefined)(a.shift())],
						t = e.parentIdWithoutPeriod;
					e.nestingLevel = t ? o[t].nestingLevel + 1 : 0, null === (i = e.children) || void 0 === i || i.forEach((e => {
						a.push(e.idWithoutPeriod)
					}))
				}
				return s[r]
			}

			function m(e) {
				const t = [...e];
				return t.sort(((e, t) => e.ordinal - t.ordinal)), t.forEach((e => {
					e.children && (e.children = m(e.children))
				})), t
			}

			function v(e, t) {
				let i = [];
				return e.forEach((e => {
					var n;
					i = [...i, e];
					const r = !!t && t(e);
					if ((null === (n = e.children) || void 0 === n ? void 0 : n.length) && !r) {
						const n = v(e.children, t);
						i = [...i, ...n]
					}
				})), i
			}

			function f(e) {
				const t = [...e],
					i = {
						dividends: []
					};
				return t.forEach((e => {
					const t = e.category.toLowerCase();
					i[t] ? i[t].push(e) : i[t] = [e]
				})), i
			}

			function b(e) {
				if (!e.length) return {};
				const t = f(p(function(e) {
						const t = new Map;
						for (const i of e) {
							const e = (0, n.ensureDefined)(D(i.id)),
								r = e && t.get(e);
							if (r)(0, n.ensureDefined)(r.periodData).push({
								period: i.period
							});
							else {
								const r = {
									...i,
									idWithoutPeriod: (0, n.ensureDefined)(D(i.id)),
									nestingLevel: -1,
									periodData: [],
									shortTitle: ""
								};
								r.periodData = [{
									period: i.period
								}], t.set(e, r)
							}
						}
						return Array.from(t.values())
					}(e))),
					i = {};
				return Object.entries(t).forEach((([e, t]) => {
					i[e] = function(e) {
						const t = m(e),
							i = new Map;
						return t.forEach((e => {
							const {
								group: t,
								ordinal: n
							} = e, r = i.get(t);
							(void 0 === r || r > n) && i.set(t, n)
						})), t.sort(((e, t) => (0, n.ensureDefined)(i.get(e.group)) - (0, n.ensureDefined)(i.get(t.group)) || e.ordinal - t.ordinal)), t
					}(t)
				})), i
			}

			function y(e, t, i) {
				function n(e, t) {
					const {
						children: r,
						...o
					} = e;
					if (r) {
						const e = r.map((e => n(e, t))).filter(Boolean);
						if (e.length) return {
							...o,
							children: e
						}
					}
					return e.name.toLowerCase().includes(t.toLowerCase()) && e.periodData.find((e => e.period === i)) ? {
						...o,
						children: void 0
					} : null
				}
				return e.map((e => n(e, t))).filter(Boolean)
			}

			function S(e, t, i = 0, n, r, o = s.DEFAULT_MAX_DATA_ARRAY_LENGTH) {
				const a = `${D(e)}_${n.toLowerCase()}`;
				let d = new Array(o).fill(null),
					u = [];
				if (t) {
					const e = t[a + c.HISTORIC_VALUES_POSTFIX];
					if (e) {
						const t = function(e, t, i, n) {
							const r = e.length > i,
								o = e.slice(0, i).reverse(),
								s = [];
							if (n) {
								const n = e.slice(0, i + 1).reverse();
								n.forEach(((e, i) => {
									if (0 === i && r) return;
									if (0 === i) return void s.push(NaN);
									let o;
									o = t === l.PeriodId.Quarter ? n[i - 4] ? E(Number(n[i - 4]), Number(e)) : NaN : E(Number(n[i - 1]), Number(e)), s.push(o)
								}))
							}
							return {
								values: o,
								changes: s
							}
						}(e, n, o, r);
						d = t.values, t.changes && (u = t.changes)
					}
					if (0 !== i && 3 !== i) {
						const e = t[D(a) + A(i)] || null,
							n = a.endsWith("_fq"),
							o = 1 === i;
						return {
							values: d,
							changes: r ? u : void 0,
							additional: e,
							additionalChange: !r || o && n ? void 0 : E(Number(d[d.length - 1]), Number(e))
						}
					}
				}
				return {
					values: d,
					changes: r ? u : void 0,
					additional: 0 === i ? void 0 : null
				}
			}

			function w(e) {
				return null === e.Estimate && null === e.Actual
			}

			function C(e, t) {
				const i = e.length - 1;
				let n = t ? i : 0;
				const r = t ? [...e].reverse().entries() : e.entries();
				for (const [e, t] of r)
					if (!w(t)) {
						n = e;
						break
					} return t ? i - n : n
			}

			function P(e) {
				if (!e || !e.length) return {
					estimateStartIndex: -1,
					items: []
				};
				if (! function(e) {
						return e.every((e => null !== e.FiscalPeriod))
					}(e) || e.every(w)) return {
					estimateStartIndex: -1,
					items: []
				};
				const t = new Set([21, 23, 22]),
					i = [...e].sort(((e, t) => e.FiscalPeriod > t.FiscalPeriod ? 1 : -1));
				let n = null;
				for (let e = i.length - 1; e--; e >= 0) {
					const r = i[e];
					if (t.has(r.Type)) {
						n = e;
						break
					}
				}
				const r = null !== n ? n + 1 : C(i, !0) - 4,
					o = Math.max(0, r - 8),
					s = Math.min(i.length, r + 4),
					a = i.slice(o, s),
					l = C(a, !1),
					c = C(a, !0);
				return {
					estimateStartIndex: r < 8 ? r - l : 8 - l,
					items: a.slice(l, c + 1)
				}
			}

			function T(e, t) {
				if (e.reported.push(t.Actual), e.estimate.push(t.Estimate), null !== t.Actual && null !== t.Estimate) {
					const i = (t.Actual - t.Estimate) / Math.abs(t.Estimate) * 100;
					e.surprise.push(isFinite(i) ? i : null)
				} else e.surprise.push(null);
				return e.periods.push(t.FiscalPeriod), e
			}

			function I(e, t) {
				if (!e) return null;
				const i = t === l.PeriodId.Year ? "_fy" : "_fq",
					n = "earnings" + i + c.HISTORIC_VALUES_POSTFIX,
					r = "revenues" + i + c.HISTORIC_VALUES_POSTFIX,
					{
						items: o,
						estimateStartIndex: s
					} = P(e[n]),
					a = o.reduce(T, {
						reported: [],
						estimate: [],
						surprise: [],
						periods: []
					}),
					{
						items: d
					} = P(e[r]),
					u = d.reduce(T, {
						reported: [],
						estimate: [],
						surprise: [],
						periods: []
					}),
					h = e => !e.reported.length && !e.estimate.length;
				return {
					earnings: h(a) ? null : a,
					revenues: h(u) ? null : u,
					estimateStartIndex: s
				}
			}

			function E(e, t) {
				if (0 === e) return NaN;
				return Number(((t - e) / Math.abs(e) * 100).toFixed(2))
			}

			function A(e) {
				switch (e) {
					case 2:
						return "_current";
					case 1:
						return "_ttm"
				}
				return ""
			}

			function D(e) {
				if (e)
					for (let t = 0; t < c.PERIOD_POSTFIXES.length; t++) {
						const i = c.PERIOD_POSTFIXES[t];
						if (e.endsWith(i)) return e.slice(0, -i.length)
					}
				return e
			}

			function k(e, t) {
				const i = new Set(t);
				return i.has(e) ? i.delete(e) : i.add(e), i
			}

			function W(e, t) {
				let i = new Set;
				const n = Symbol();
				for (let r = 0; r < e.length; r++) {
					const {
						idWithoutPeriod: o,
						parentIdWithoutPeriod: s = n,
						children: a
					} = e[r];
					if (null == a ? void 0 : a.length) {
						const e = W(a, t);
						i = new Set([...Array.from(i), ...Array.from(e)])
					}(t.has(o) || i.size > 0) && s !== n && i.add(s)
				}
				return i
			}

			function L(e) {
				switch (e) {
					case 2:
						return (0, r.t)("Current");
					case 1:
						return (0, r.t)("TTM");
					case 3:
						return "";
					case 0:
						return
				}
			}

			function x(e) {
				return "string" == typeof e ? e : null === e ? "â€”" : (0, a.format)(e, "numbers")
			}

			function O(e) {
				return `${e.replace(/_/g,"-")}/`
			}
		},
		864093: e => {
			"use strict";
			e.exports = JSON.parse('{"ebitda":43000553610,"gross_profit":43000553611,"total_revenue":43000553619,"cost_of_goods":43000553618,"dep_amort_exp_income_s":43000563477,"cost_of_goods_excl_dep_amort":43000563478,"operating_expenses":43000563463,"sell_gen_admin_exp_total":43000553613,"sell_gen_admin_exp_other":43000553614,"research_and_dev":43000553612,"other_oper_expense_total":43000563483,"total_oper_expense":43000553615,"earnings_per_share_diluted":43000553616,"net_income":43000553617,"oper_income":43000563464,"total_non_oper_income":43000563465,"non_oper_interest_exp":43000563466,"interest_expense_on_debt":43000563467,"interest_capitalized":43000563468,"non_oper_income":43000563471,"non_oper_interest_income":43000563473,"pretax_equity_in_earnings":43000563474,"other_income":43000563479,"unusual_expense_inc":43000563476,"pretax_income":43000563462,"equity_in_earnings":43000563487,"income_tax":43000563492,"minority_interest_exp":43000563495,"after_tax_other_income":43000563497,"net_income_bef_disc_oper":43000563500,"discontinued_operations":43000563502,"dilution_adjustment":43000563504,"preferred_dividends":43000563506,"diluted_net_income":43000563516,"earnings_per_share_basic":43000563520,"total_liabilities_shrhldrs_equity":43000553626,"total_debt":43000553622,"total_assets":43000553623,"total_current_assets":43000557441,"cash_n_short_term_invest":43000563702,"cash_n_equivalents":43000563709,"short_term_invest":43000563716,"total_receivables_net":43000563738,"accounts_receivables_net":43000563740,"other_receivables":43000563741,"inventory_work_in_progress":43000563746,"inventory_progress_payments":43000563748,"inventory_finished_goods":43000563749,"inventory_raw_materials":43000563753,"prepaid_expenses":43000563757,"other_current_assets_total":43000563761,"total_non_current_assets":43000557440,"long_term_investments":43000563639,"long_term_note_receivable":43000563641,"investments_in_unconcsolidate":43000563645,"other_investments":43000563649,"ppe_total_net":43000563657,"ppe_total_gross":43000563667,"accum_deprec_total":43000563673,"deferred_tax_assests":43000563683,"intangibles_net":43000563686,"goodwill":43000563688,"other_intangibles_net":43000563689,"long_term_other_assets_total":43000563693,"total_liabilities":43000553624,"total_current_liabilities":43000557437,"short_term_debt":43000563554,"current_port_debt_capital_leases":43000563557,"short_term_debt_excl_current_port":43000563563,"notes_payable_short_term_debt":43000563600,"other_short_term_debt":43000563614,"accounts_payable":43000563619,"income_tax_payable":43000563621,"dividends_payable":43000563624,"accrued_payroll":43000563628,"deferred_income_current":43000563631,"other_current_liabilities":43000563635,"total_non_current_liabilities":43000557436,"long_term_debt":43000553621,"long_term_debt_excl_capital_lease":43000563521,"capital_operating_lease_obligations":43000563522,"capital_lease_obligations":43000563527,"operating_lease_liabilities":43000563532,"provision_f_risks":43000563535,"deferred_tax_liabilities":43000563536,"deferred_income_non_current":43000563540,"other_liabilities_total":43000563545,"total_equity":43000553625,"shrhldrs_equity":43000557442,"common_equity_total":43000563866,"retained_earnings":43000563867,"paid_in_capital":43000563871,"common_stock_par":43000563873,"additional_paid_in_capital":43000563874,"treasury_stock_common":43000563875,"other_common_equity":43000563877,"preferred_stock_carrying_value":43000563879,"minority_interest":43000563884,"free_cash_flow":43000553630,"cash_f_operating_activities":43000553627,"funds_f_operations":43000563886,"net_income_starting_line":43000563888,"cash_flow_deprecation_n_amortization":43000563892,"depreciation_depletion":43000564142,"amortization":43000564143,"cash_flow_deferred_taxes":43000564144,"non_cash_items":43000564146,"total_extra_items":43000564145,"changes_in_working_capital":43000564147,"change_in_accounts_receivable":43000564148,"change_in_taxes_payable":43000564149,"change_in_accounts_payable":43000564150,"change_in_accrued_expenses":43000564151,"change_in_inventories":43000564153,"change_in_other_assets":43000564154,"cash_f_investing_activities":43000553628,"purchase_sale_business":43000564156,"sales_of_business":43000564158,"purchase_of_business":43000564159,"purchase_sale_investments":43000564160,"sales_of_investments":43000564161,"purchase_of_investments":43000564162,"other_investing_cash_flow_items_total":43000564163,"other_investing_cash_flow_sources":43000564164,"other_investing_cash_flow_uses":43000564165,"capital_expenditures":43000564166,"capital_expenditures_fixed_assets":43000564167,"capital_expenditures_other_assets":43000564168,"cash_f_financing_activities":43000553629,"issuance_of_stock_net":43000564169,"sale_of_stock":43000564170,"purchase_of_stock":43000564171,"issuance_of_debt_net":43000564172,"issuance_of_short_term_debt":43000564173,"issuance_of_long_term_debt":43000564175,"supplying_of_long_term_debt":43000564176,"reduction_of_long_term_debt":43000564177,"issuance_of_other_debt":43000564178,"other_financing_cash_flow_items_total":43000564179,"other_financing_cash_flow_sources":43000564181,"other_financing_cash_flow_uses":43000564182,"total_cash_dividends_paid":43000564183,"common_dividends_cash_flow":43000564185,"preferred_dividends_cash_flow":43000564186,"market_cap_basic":43000597015,"number_of_employees":43000597080,"dividends_yield":43000597817,"dividend_payout_ratio":43000597738,"price_earnings":43000597017,"price_sales":43000597019,"price_cash_flow":43000597816,"price_book":43000597016,"enterprise_value":43000597077,"enterprise_value_ebitda":43000597064,"ev_ebit":43000597063,"ev_revenue":43000597065,"price_to_free_cash_flow":43000597814,"price_to_tangible_book":43000597815,"price_earnings_forward":43000597831,"price_sales_forward":43000597832,"return_on_assets":43000597054,"return_on_equity":43000597021,"return_on_invested_capital":43000597056,"gross_margin":43000597811,"operating_margin":43000597076,"ebitda_margin":43000597075,"net_margin":43000597074,"return_on_equity_adjust_to_book":43000597055,"return_on_tang_assets":43000597052,"return_on_tang_equity":43000597053,"free_cash_flow_margin":43000597813,"quick_ratio":43000597050,"current_ratio":43000597051,"invent_turnover":43000597046,"asset_turnover":43000597022,"debt_to_asset":43000597031,"debt_to_equity":43000597078,"long_term_debt_to_assets":43000597048,"debt_to_ebitda":43000597032,"debt_to_revenue":43000597033,"effective_interest_rate_on_debt":43000597034,"equity_to_asset":43000597035,"goodwill_to_asset":43000597036,"interst_cover":43000597037,"invent_to_revenue":43000597047,"share_buyback_ratio":43000597057,"sloan_ratio":43000597058,"earnings_estimate":43000597066,"sales_estimates":43000597067,"revenue_one_year_growth":43000597068,"earnings_per_share_basic_one_year_growth":43000597069,"earnings_per_share_diluted_one_year_growth":43000597071,"accruals_ratio":43000597073,"tangible_common_equity_ratio":43000597079,"revenue_per_employee":43000597081,"net_income_per_employee":43000597082,"graham_numbers":43000597084,"ncavps_ratio":43000597085,"quality_ratio":43000597086,"gross_profit_to_asset":43000597087,"buyback_yield":43000597088,"cash_conversion_cycle":43000597089,"peg_ratio":43000597090,"altman_z_score":43000597092,"piotroski_f_score":43000597734,"sustainable_growth_rate":43000597736,"research_and_develop_to_revenue":43000597739,"earnings_yield":43000597010,"tobin_q_ratio":43000597834,"beneish_m_score":43000597835,"kz_index":43000597844,"fulmer_h_factor":43000597847,"springate_score":43000597848,"zmijewski_score":43000597850,"cash_to_debt":43000597023,"cogs_to_revenue":43000597026,"days_invent":43000597028,"days_pay":43000597029,"day_sales_out":43000597030,"price_free_cash_flow":43000597814,"price_tangible_book":43000597815,"book_value_per_share":43000670330,"book_tangible_per_share":43000597072,"return_on_common_equity":43000656797,"ebit":43000670329,"total_shares_outstanding":43000670331,"float_shares_outstanding":43000670341,"dps_common_stock_prim_issue":43000670334,"basic_shares_outstanding":43000670320,"diluted_shares_outstanding":43000670322,"total_inventory":43000563745,"net_debt":43000665310}')
		}
	}
]);